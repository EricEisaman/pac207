{"version":3,"file":"bundle.js","sources":["../src/utils.js","../src/load-spinner.js","../src/grabbable.js","../src/nav-pointer.js","../src/shader-frog.js","../src/ring-dial.js","../src/meter.js","../src/hud.js","../src/client-config.js","../src/game.js","../src/client-socket.js","../src/collectible.js","../src/login.js","../src/aframe-effects.js","../src/main.js"],"sourcesContent":["export default CS1=>{\n  CS1.utils = {\n    uid: (()=>{\n        const firstItem = {\n            value: \"0\"\n        };\n        /*length can be increased for lists with more items.*/\n        let counter = \"123456789\".split('')\n            .reduce((acc, curValue, curIndex, arr) => {\n                const curObj = {};\n                curObj.value = curValue;\n                curObj.prev = acc;\n\n                return curObj;\n            }, firstItem);\n        firstItem.prev = counter;\n\n        return function () {\n            let now = Date.now();\n            if (typeof performance === \"object\" && typeof performance.now === \"function\") {\n                now = performance.now().toString().replace('.', '');\n            }\n            counter = counter.prev;\n            return `${now}${Math.random().toString(16).substr(2)}${counter.value}`;\n        }\n    })()\n\n  }\n}","export default(()=>{\n\n  window.addEventListener('load', function () {\n    console.log('window loaded make spinner');\n    let loadSpinner = document.createElement('div');\n    loadSpinner.className = 'lds-grid';\n    for(let i=0;i<9;i++){\n      loadSpinner.appendChild(document.createElement('div'));\n    } \n    loadSpinner.style.left = window.innerWidth/2 - 32 + 'px';\n    let loadingScreen =  document.querySelector('#loading-screen');\n    loadingScreen.style.width = window.innerWidth + 'px';\n    loadingScreen.style.height = window.innerHeight + 'px';\n    loadingScreen.appendChild(loadSpinner);\n  }, false);\n  \n})()","function findComponent(componentName)\n{\n\treturn document.querySelector(`[${componentName}]`).components[componentName];\n}\n//Moves the subject to a new parent while preserving its transform in the world\nfunction reparentObject3D(subject, newParent)\n{\n\tsubject.updateMatrixWorld();\n\tsubject.matrix.copy(subject.matrixWorld);\n\tsubject.applyMatrix(new THREE.Matrix4().getInverse(newParent.matrixWorld));\n\tnewParent.add(subject);\n}\n// Copys the world transforms between objects even if the have different parents\nvar copyTransform = (function()\n{\n\tvar scratchMat = new THREE.Matrix4();\n\treturn function(source, destination)\n\t{\n\t\tdestination.matrix.copy(source.matrixWorld);\n\t\tdestination.applyMatrix(scratchMat.getInverse(destination.parent.matrixWorld));\n\t}\n})();\nfunction toVector(o)\n{\n\treturn new THREE.Vector3(o.x, o.y, o.z);\n}\nfunction toList(collection)\n{\n\tvar list = [];\n\tfor(var i=0;i<collection.length;i++)\n\t{\n\t\tlist.push(collection[i]);\n\t}\n\treturn list;\n}\nfunction addDot(el, position, radius, color)\n{\n\tcolor = color || \"red\";\n\tvar dot = document.createElement(\"a-sphere\");\n\tdot.setAttribute(\"radius\", radius);\n\tdot.setAttribute(\"position\", position);\n\tdot.setAttribute(\"color\", color);\n\tel.appendChild(dot);\n}\nfunction directionLocalToWorld(object, localDirection)\n{\n\treturn localDirection.transformDirection(object.matrixWorld);\n}\n\nexport default (function grabbable(){AFRAME.registerComponent(\"grabbable\", {\n\tschema: {\n\t\torigin: { type: \"selector\" }\n\t},\n\n\tinit: function()\n\t{\n\t\tvar self = this;\n\t\tvar isDragging = false;\n\t\tself.originEl = this.data.origin || this.el;\n\t\tself.proxyObject = null;\n\n\t\tself.el.classList.add(\"interactive\");\n\n\t\tself.el.addEventListener(\"mousedown\", grab);\n    \n    if(AFRAME.utils.device.isMobile())self.el.addEventListener(\"click\", function(e){\n       grab(e);\n       setTimeout(function(e){\n         document.querySelector('#cam-cursor').setAttribute('material','color: purple');\n         release(e);\n         setTimeout(function(e){\n           document.querySelector('#cam-cursor').setAttribute('material','color: crimson');\n         },500);\n       },5000);\n    });\n    \n    function grab(e){\n      //console.log(\"GRABBING\");\n\t\t\te.cancelBubble = true;\n\t\t\tif(isDragging) return;\n      \n\t\t\tisDragging = true;\n\n\t\t\tvar cursor = e.detail.cursorEl;\n\t\t\tif(cursor == self.el.sceneEl) cursor = document.querySelector(\"[camera]\"); //This handles the scenario where the user isn't using motion controllers\n      // avoid seeing flickering at origin during reparenting\n      self.el.setAttribute('visible', false);\n      setTimeout(function(){\n        self.el.setAttribute('visible', true);\n      },20);\n\n\t\t\tcreateProxyObject(cursor.object3D);\n\t\t\t\n\t\t\tself.originEl.emit(\"grabStart\", e);\n\t\t\tself.originEl.addState(\"moving\");\n\t\t}\n\n\t\tself.el.addEventListener(\"mouseup\", release);\n    \n    function release(e)\n\t\t{\n\t\t\tif(isDragging)\n\t\t\t{\n\t\t\t\tisDragging = false;\n\n\t\t\t\tif(self.proxyObject)\n\t\t\t\t{\n\t\t\t\t\tself.proxyObject.parent.remove(self.proxyObject);\n\t\t\t\t\tself.proxyObject = null;\n\t\t\t\t}\n\n\t\t\t\tself.originEl.setAttribute(\"position\", self.originEl.getAttribute(\"position\")); //seems pointless, but will force the event system to notify subscribers\n\t\t\t\tself.originEl.setAttribute(\"rotation\", self.originEl.getAttribute(\"rotation\")); //seems pointless, but will force the event system to notify subscribers\n\n\t\t\t\tself.originEl.emit(\"grabEnd\", e);\n\t\t\t\tself.originEl.removeState(\"moving\");\n\t\t\t}\n\t\t}\n\n\t\tfunction createProxyObject(cursorObject)\n\t\t{\n\t\t\tself.proxyObject = new THREE.Object3D();\n      self.originEl.visible = false;\n      //handle object momentary flicker at world origin\n      setTimeout(function(){\n        self.originEl.visible = true;\n      },1000);\n\t\t\tcursorObject.add(self.proxyObject);\n\t\t\tcopyTransform(self.originEl.object3D, self.proxyObject);\t\t\t\t\n\t\t}\n\t},\n\n\ttick: function()\n\t{\n\t\tvar self = this;\n\t\tif(self.proxyObject)\n\t\t{\n\t\t\tcopyTransform(self.proxyObject, self.originEl.object3D);\n\t\t\tself.originEl.setAttribute(\"position\", self.originEl.getAttribute(\"position\")); //seems pointless, but will force the event system to notify subscribers\n\t\t\t\tself.originEl.setAttribute(\"rotation\", self.originEl.getAttribute(\"rotation\")); //seems pointless, but will force the event system to notify subscribers\n\t\t}\n\t}\n})\n  \n})()","export default (function navpointer(){\n\n  AFRAME.registerComponent('nav-pointer', {\n  init: function () {\n    const el = this.el;\n// On click, send the NPC to the target location.\n    el.addEventListener('click',e=>{\n      const ctrlEl = el.sceneEl.querySelector('[nav-agent]');\n      if(ctrlEl) ctrlEl.setAttribute('nav-agent', {\n        active: true,\n        destination: e.detail.intersection.point\n      });\n    });\n    el.addEventListener('mouseenter',e=>{\n      el.setAttribute('material', {color: 'green'});\n    });\n    el.addEventListener('mouseleave',e=>{\n      el.setAttribute('material', {color: 'crimson'})\n    });\n    \n    el.addEventListener('mousedown',e=>{\n      //console.log(e);\n    });\n \n    // Refresh the raycaster after models load.\n    el.sceneEl.addEventListener('object3dset',e=>{\n      this.el.components.raycaster.refreshObjects();\n    });\n  }\n});\n  \n})()","var shaders = {};\nimport Polkadot_Shader from './Polkadot_Shader.json';\nshaders['Polkadot_Shader']=Polkadot_Shader;\nimport Sun_Shader from './Sun_Shader.json';\nshaders['Sun_Shader']=Sun_Shader;\nimport Jelly_Shader from './Jelly_Shader.json';\nshaders['Jelly_Shader']=Jelly_Shader;\nimport Green_Dance_Shader from './Green_Dance_Shader.json';\nshaders['Green_Dance_Shader']=Green_Dance_Shader;\nimport Cosmic_Shader from './Cosmic_Shader.json';\nshaders['Cosmic_Shader']=Cosmic_Shader;\nimport Cool_Tiles_Shader from './Cool_Tiles_Shader.json';\nshaders['Cool_Tiles_Shader']=Cool_Tiles_Shader;\nimport Disco_Shader from './Disco_Shader.json';\nshaders['Disco_Shader']=Disco_Shader;\nimport Marching_Ants_Shader from './Marching_Ants_Shader.json';\nshaders['Marching_Ants_Shader']=Marching_Ants_Shader;\nimport Goo_Shader from './Goo_Shader.json';\nshaders['Goo_Shader']=Goo_Shader;\nimport Psycho_Shader from './Psycho_Shader.json';\nshaders['Psycho_Shader']=Psycho_Shader;\n\nexport default(function shaderfrog(){\n  \n\nvar defaultThreeUniforms = [\n    'normalMatrix', 'viewMatrix', 'projectionMatrix', 'position', 'normal',\n    'modelViewMatrix', 'uv', 'uv2', 'modelMatrix'\n];\n\nfunction ShaderRuntime() {}\n\nShaderRuntime.prototype = {\n\n    mainCamera: null,\n    cubeCameras: {},\n\n    reserved: { time: null, cameraPosition: null },\n\n    umap: {\n        float: { type: 'f', value: 0 },\n        int: { type: 'i', value: 0 },\n        vec2: { type: 'v2', value() { return new THREE.Vector2(); } },\n        vec3: { type: 'v3', value() { return new THREE.Vector3(); } },\n        vec4: { type: 'v4', value() { return new THREE.Vector4(); } },\n        samplerCube: { type: 't' },\n        sampler2D: { type: 't' }\n    },\n\n    getUmap( type ) {\n        let value = this.umap[ type ].value;\n        return typeof value === 'function' ? value() : value;\n    },\n\n    registerCamera( camera ) {\n\n        if( !( camera instanceof THREE.Camera ) ) {\n            throw new Error( 'Cannot register a non-camera as a camera!' );\n        }\n\n        this.mainCamera = camera;\n\n    },\n\n    registerCubeCamera( name, camera ) {\n\n        if( !camera.renderTarget ) {\n            throw new Error( 'Cannot register a non-camera as a camera!' );\n        }\n\n        this.cubeCameras[ name ] = camera;\n\n    },\n\n    unregisterCamera( name ) {\n\n        if( name in this.cubeCameras ) {\n\n            delete this.cubeCameras[ name ];\n            \n        } else if( name === this.mainCamera ) {\n\n            delete this.mainCamera;\n\n        } else {\n\n            throw new Error( 'You never registered camera ' + name );\n\n        }\n\n    },\n\n    updateSource( identifier, config, findBy ) {\n\n        findBy = findBy || 'name';\n\n        if( !this.shaderTypes[ identifier ] ) {\n            throw new Error( 'Runtime Error: Cannot update shader ' + identifier + ' because it has not been added.' );\n        }\n\n        let newShaderData = this.add( identifier, config ),\n            shader, x;\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader[ findBy ] === identifier ) {\n                extend( shader.material, omit( newShaderData, 'id' ) );\n                shader.material.needsUpdate = true;\n            }\n        }\n\n    },\n\n    renameShader( oldName, newName ) {\n\n        let x, shader;\n\n        if( !( oldName in this.shaderTypes ) ) {\n            throw new Error('Could not rename shader ' + oldName + ' to ' + newName + '. It does not exist.');\n        }\n\n        this.shaderTypes[ newName ] = this.shaderTypes[ oldName ];\n        delete this.shaderTypes[ oldName ];\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader.name === oldName ) {\n                shader.name = newName;\n            }\n        }\n\n    },\n\n    get( identifier ) {\n\n        let shaderType = this.shaderTypes[ identifier ];\n\n        if( !shaderType.initted ) {\n\n            this.create( identifier );\n        }\n\n        return shaderType.material;\n\n    },\n\n    add( shaderName, config ) {\n\n        let newData = clone( config ),\n            uniform;\n        newData.fragmentShader = config.fragment;\n        newData.vertexShader = config.vertex;\n        delete newData.fragment;\n        delete newData.vertex;\n\n        for( var uniformName in newData.uniforms ) {\n            uniform = newData.uniforms[ uniformName ];\n            if( uniform.value === null ) {\n                newData.uniforms[ uniformName ].value = this.getUmap( uniform.glslType );\n            }\n        }\n        \n        if( shaderName in this.shaderTypes ) {\n            // maybe not needed? too sleepy, need document\n            extend( this.shaderTypes[ shaderName ], newData );\n        } else {\n            this.shaderTypes[ shaderName ] = newData;\n        }\n\n        return newData;\n\n    },\n\n    create( identifier ) {\n\n        let shaderType = this.shaderTypes[ identifier ];\n      \n        delete shaderType.id;\n\n        shaderType.material = new THREE.RawShaderMaterial( shaderType );\n\n        this.runningShaders.push( shaderType );\n\n        shaderType.init && shaderType.init( shaderType.material );\n        shaderType.material.needsUpdate = true;\n\n        shaderType.initted = true;\n\n        return shaderType.material;\n\n    },\n\n    updateRuntime( identifier, data, findBy ) {\n\n        findBy = findBy || 'name';\n\n        let shader, x, uniformName, uniform;\n\n        // This loop does not appear to be a slowdown culprit\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader[ findBy ] === identifier ) {\n                for( uniformName in data.uniforms ) {\n\n                    if( uniformName in this.reserved ) {\n                        continue;\n                    }\n\n                    if( uniformName in shader.material.uniforms ) {\n\n                        uniform = data.uniforms[ uniformName ];\n\n                        // this is nasty, since the shader serializes\n                        // CubeCamera model to string. Maybe not update it at\n                        // all?\n                        if( uniform.type === 't' && typeof uniform.value === 'string' ) {\n                            uniform.value = this.cubeCameras[ uniform.value ].renderTarget;\n                        }\n\n                        shader.material.uniforms[ uniformName ].value = data.uniforms[ uniformName ].value;\n                    }\n                }\n            }\n        }\n\n    },\n\n    // Update global shader uniform values\n    updateShaders( time, obj ) {\n\n        let shader, x;\n\n        obj = obj || {};\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n\n            for( let uniform in obj.uniforms ) {\n                if( uniform in shader.material.uniforms ) {\n                    shader.material.uniforms[ uniform ].value = obj.uniforms[ uniform ];\n                }\n            }\n\n            if( 'cameraPosition' in shader.material.uniforms && this.mainCamera ) {\n\n                shader.material.uniforms.cameraPosition.value = this.mainCamera.position.clone();\n\n            }\n\n            if( 'viewMatrix' in shader.material.uniforms && this.mainCamera ) {\n\n                shader.material.uniforms.viewMatrix.value = this.mainCamera.matrixWorldInverse;\n\n            }\n\n            if( 'time' in shader.material.uniforms ) {\n\n                shader.material.uniforms.time.value = time;\n\n            }\n\n        }\n\n    },\n\n    shaderTypes: shaders,\n\n    runningShaders: []\n\n};\n\n// Convenience methods so we don't have to include underscore\nfunction extend() {\n    let length = arguments.length,\n        obj = arguments[ 0 ];\n\n    if( length < 2 ) {\n        return obj;\n    }\n\n    for( let index = 1; index < length; index++ ) {\n        let source = arguments[ index ],\n            keys = Object.keys( source || {} ),\n            l = keys.length;\n        for( let i = 0; i < l; i++ ) {\n            let key = keys[i];\n            obj[ key ] = source[ key ];\n        }\n    }\n\n    return obj;\n}\n\nfunction clone( obj ) {\n    return extend( {}, obj );\n}\n\nfunction omit( obj, ...keys ) {\n    let cloned = clone( obj ), x, key;\n    for( x = 0; key = keys[ x++ ]; ) {\n        delete cloned[ key ];\n    }\n    return cloned;\n}\n  \nAFRAME.registerSystem('shader-frog', {\n  init:function(){\n    this.frog_runtime = new ShaderRuntime();\n    this.clock = new THREE.Clock();\n    var self = this;\n        \n    var scene = document.querySelector('a-scene');\n    if (scene.hasLoaded) {\n      registerCamera().bind(this);;\n    } else {\n      scene.addEventListener('loaded', registerCamera);\n    }\n    function registerCamera () {\n       var camera = document.querySelector(\"a-scene\").systems[\"camera\"];\n       if(camera && camera.sceneEl && camera.sceneEl.camera){\n         camera = camera.sceneEl.camera;\n         self.frog_runtime.registerCamera(camera);\n       }\n    }\n  },\n  tick: function (t) {\n    this.frog_runtime.updateShaders( this.clock.getElapsedTime() );\n  }\n});\nAFRAME.registerComponent('shader-frog',{\n  schema:{\n    name:{type:\"string\"}\n  },\n  init: function(){\n    this.originalMaterial = this.el.getObject3D('mesh').material;\n    this.shaderData = shaders[this.data.name];\n  },\n  update: function(){\n    this.system.frog_runtime.add(this.data.name,this.shaderData);\n    var material = this.system.frog_runtime.get(this.data.name);\n    this.el.getObject3D('mesh').material = material;\n  },\n  remove: function(){\n    this.el.getObject3D('mesh').material = this.originalMaterial;\n  }\n});\n  \n})()\n","const RingDial = function(container,labelText,suffix=\"\",labelColor='#e23fcf',gradientColor1='#78F8EC',gradientColor2='#6E4AE2') {\n    this.container = container;\n    this.size = window.innerWidth/9;\n    this.strokeWidth = this.size / 8;\n    this.radius = (this.size / 2) - (this.strokeWidth / 2);\n    this.value = 0;\n    this.direction = 'up';\n    this.svg;\n    this.defs;\n    this.slice;\n    this.overlay;\n    this.text;\n    this.label;\n    this.labelText = labelText;\n    this.suffix = suffix;\n    this.arrow;\n    this.create(labelColor,gradientColor1,gradientColor2);\n}\n\nRingDial.prototype.create = function(labelColor,gradientColor1,gradientColor2) {\n    this.createSvg();\n    this.createDefs(gradientColor1,gradientColor2);\n    this.createSlice();\n    this.createOverlay();\n    this.createText(gradientColor2);\n    //this.createArrow();\n    this.createLabel(labelColor);\n    this.container.appendChild(this.svg);\n};\n\nRingDial.prototype.createSvg = function() {\n    var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute('width', this.size + 'px');\n    svg.setAttribute('height', this.size + 'px');\n    this.svg = svg;\n};\n\nRingDial.prototype.createDefs = function(gc1,gc2) {\n    var defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    var linearGradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n    linearGradient.setAttribute('id', 'gradient'+this.labelText);\n    var stop1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n    stop1.setAttribute('stop-color', gc2);\n    stop1.setAttribute('offset', '0%');\n    linearGradient.appendChild(stop1);\n    var stop2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n    stop2.setAttribute('stop-color', gc1);\n    stop2.setAttribute('offset', '100%');\n    linearGradient.appendChild(stop2);\n    var linearGradientBackground = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n    linearGradientBackground.setAttribute('id', 'gradient-background');\n    var stop1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n    stop1.setAttribute('stop-color', 'rgba(0, 0, 0, 0.2)');\n    stop1.setAttribute('offset', '0%');\n    linearGradientBackground.appendChild(stop1);\n    var stop2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n    stop2.setAttribute('stop-color', 'rgba(0, 0, 0, 0.05)');\n    stop2.setAttribute('offset', '100%');\n    linearGradientBackground.appendChild(stop2);\n    defs.appendChild(linearGradient);\n    defs.appendChild(linearGradientBackground);\n    this.svg.appendChild(defs);\n    this.defs = defs;\n};\n\nRingDial.prototype.createSlice = function() {\n    var slice = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    slice.setAttribute('fill', 'none');\n    slice.setAttribute('stroke', `url(#gradient${this.labelText})`);\n    slice.setAttribute('stroke-width', this.strokeWidth);\n    slice.setAttribute('transform', 'translate(' + this.strokeWidth / 2 + ',' + this.strokeWidth / 2 + ')');\n    slice.setAttribute('class', 'animate-draw');\n    this.svg.appendChild(slice);\n    this.slice = slice;\n};\n\nRingDial.prototype.createOverlay = function() {\n    var r = this.size - (this.size / 2) - this.strokeWidth / 2;\n    var circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    circle.setAttribute('cx', this.size / 2);\n    circle.setAttribute('cy', this.size / 2);\n    circle.setAttribute('r', r);\n    circle.setAttribute('fill', 'url(#gradient-background)');\n    this.svg.appendChild(circle);\n    this.overlay = circle;\n};\n\nRingDial.prototype.createText = function(c) {\n    var fontSize = this.size / 3.5;\n    var text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    text.setAttribute('x', (this.size / 2) + fontSize / 7.5);\n    text.setAttribute('y', (this.size / 2) + fontSize / 4);\n    text.setAttribute('font-size', fontSize);\n    text.setAttribute('fill', c);\n    text.setAttribute('text-anchor', 'middle');\n    var tspanSize = fontSize / 3;\n    text.innerHTML = 0 + `<tspan font-size=${tspanSize} dy=${-tspanSize * 1.2}>${this.suffix}</tspan>`;\n    this.svg.appendChild(text);\n    this.text = text;\n};\n\nRingDial.prototype.createLabel = function(c) {\n    let n=4.5;\n    if(this.labelText.length>8)n=7\n    var fontSize = this.size / n;\n    var text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    text.setAttribute('x', this.size / 2);\n    text.setAttribute('y', (2*this.size / 3) + fontSize / (n-1));\n    text.setAttribute('font-family', 'Century Gothic, Lato');\n    text.setAttribute('font-size', fontSize);\n    text.setAttribute('fill', c);\n    text.setAttribute('text-anchor', 'middle');\n    var tspanSize = fontSize / 3;\n    text.innerHTML = this.labelText;\n    this.svg.appendChild(text);\n    this.label = text;\n};\n\nRingDial.prototype.createArrow = function() {\n    var arrowSize = this.size / 10;\n    var arrowYOffset, m;\n    if(this.direction === 'up') {\n        arrowYOffset = arrowSize / 2;\n        m = -1;\n    }\n    else if(this.direction === 'down') {\n        arrowYOffset = 0;\n        m = 1;\n    }\n    var arrowPosX = ((this.size / 2) - arrowSize / 2);\n    var arrowPosY = (this.size - this.size / 3) + arrowYOffset;\n    var arrowDOffset =  m * (arrowSize / 1.5);\n    var arrow = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    arrow.setAttribute('d', 'M 0 0 ' + arrowSize + ' 0 ' + arrowSize / 2 + ' ' + arrowDOffset + ' 0 0 Z');\n    arrow.setAttribute('fill', '#97F8F0');\n    arrow.setAttribute('opacity', '0.6');\n    arrow.setAttribute('transform', 'translate(' + arrowPosX + ',' + arrowPosY + ')');\n    this.svg.appendChild(arrow);\n    this.arrow = arrow;\n};\n\nRingDial.prototype.animateStart = function() {\n    var v = 0;\n    var self = this;\n    var intervalOne = setInterval(function() {\n        var p = +(v / self.value).toFixed(2);\n        var a = (p < 0.95) ? 2 - (2 * p) : 0.05;\n        v += a;\n        // Stop\n        if(v >= +self.value) {\n            v = self.value;\n            clearInterval(intervalOne);\n        }\n        self.setValue(v);\n    }, 10);\n};\n\nRingDial.prototype.animateTo = function(to) {\n    var v = this.value;\n    var self = this;\n    var intervalOne = setInterval(function() {\n        var p =  (v>to)? +(to /v).toFixed(2)  : +(v / to).toFixed(2);\n        var a = (p < 0.95) ? 2 - (2 * p) : 0.05;\n        if(to<v){\n          v -= a;\n            // Stop\n            if(v <= -to) {\n                self.value = to;\n                clearInterval(intervalOne);\n            }\n        }else {\n           v += a;\n            // Stop\n            if(v >= +to) {\n                self.value = to;\n                clearInterval(intervalOne);\n            }\n        }\n        self.setValue(v);\n    }, 10);\n};\n\nRingDial.prototype.animateReset = function() {\n    this.setValue(0);\n};\n\nRingDial.prototype.polarToCartesian = function(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\n  return {\n    x: centerX + (radius * Math.cos(angleInRadians)),\n    y: centerY + (radius * Math.sin(angleInRadians))\n  };\n}\n\nRingDial.prototype.describeArc = function(x, y, radius, startAngle, endAngle){\n    var start = this.polarToCartesian(x, y, radius, endAngle);\n    var end = this.polarToCartesian(x, y, radius, startAngle);\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n    var d = [\n        \"M\", start.x, start.y, \n        \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n    ].join(\" \");\n    return d;       \n}\n\nRingDial.prototype.setValue = function(value) {\t\n\t\tvar c = (value / 100) * 360;\n\t\tif(c === 360)\n\t\t\tc = 359.99;\n\t\tvar xy = this.size / 2 - this.strokeWidth / 2;\n\t\tvar d = this.describeArc(xy, xy, xy, 180, 180 + c);\n    this.slice.setAttribute('d', d);\n    var tspanSize = (this.size / 3.5) / 3;\n    this.text.innerHTML = Math.floor(value) + `<tspan font-size=${tspanSize} dy=${-tspanSize * 1.2}>${this.suffix}</tspan>`;\n};\n\nexport default RingDial;","export default class Meter{\n\n  constructor(container,labelText='label',color='white',value=0,min=0,max=1,low=0.25,high=0.75,optimum=0.8){\n    this.widget = document.createElement('div');\n    this.widget.style.fontSize = window.innerWidth/9/4.5 + 'px';\n    this.widget.style.marginTop = window.innerWidth/81 + 'px';\n    this.widget.style.marginBottom = window.innerWidth/81 + 'px';\n    this.widget.style.color = color;\n    this.min = parseFloat(min);\n    this.max = parseFloat(max);\n    this.range = max-min;\n    this.el = document.createElement('meter');\n    this.el.setAttribute('value',value);\n    this.el.setAttribute('min',min);\n    this.el.setAttribute('max',max);\n    this.el.setAttribute('low',low);\n    this.el.setAttribute('high',high);\n    this.el.setAttribute('optimum',optimum);\n    this.el.style.width = window.innerWidth/8 + 'px';\n    this.el.style.height = window.innerWidth/32 + 'px';\n    this.widget.appendChild(this.el);\n    this.label = document.createElement('div');\n    this.label.style.textAlign = 'center';\n    this.label.innerHTML = labelText;\n    this.widget.appendChild(this.label);\n    container.appendChild(this.widget);\n  }\n  \n  animateTo(to) {\n      var v = parseFloat(this.el.getAttribute('value'));\n      var self = this.el;\n      self.range = this.range;\n      var intervalOne = setInterval(function() {\n          var p =  (v>to)? +(to /v).toFixed(4)  : +(v / to).toFixed(4);\n          var a = (p < 0.95) ? self.range/30 - (self.range/30 * p) : 0.003;\n          if(to<v){\n            \n            v -= a;\n              // Stop\n              if(v <= -to) {\n                  self.value = to\n                  clearInterval(intervalOne);\n              }\n          }else {\n             v += a;\n              // Stop\n              if(v >= +to) {\n                  self.value = to;\n                  clearInterval(intervalOne);\n              }\n          }\n          self.value = v;\n      }, 10);\n  };\n  \n\n\n}","let config = {\n  regions:{\n    top:true,\n    left:false,\n    right:false,\n    bottom:false\n  }\n}\n\nimport RingDial from './ring-dial';\nimport Meter from './meter';\n\nexport default CS1=>{\n\n  window.addEventListener('load', function () {\n    CS1.hud = {};\n    let hudElement = document.querySelector('#hud');\n    let containers = generateRegions(hudElement);\n    CS1.hud.pointsDial = new RingDial(containers.top,'points','','#ccc','white','red');\n    CS1.hud.statusDial = new RingDial(containers.top,'status','%','#ccc','white','lime');\n    CS1.hud.magicDial = new RingDial(containers.top,'magic','%','#ccc','white','#b45ef9');\n    CS1.hud.oxygenMeter = new Meter(containers.top,'oxygen','#ccc',0.9);\n    setInterval(e=>{\n      CS1.hud.statusDial.animateTo(100*Math.random());\n      CS1.hud.magicDial.animateTo(100*Math.random());\n      CS1.hud.oxygenMeter.animateTo(Math.random());\n    },4000);\n  });\n  \n  function generateRegions(hudElement){\n   let containers = {};\n   if(config.regions.top){\n     let top = document.createElement('div');\n     top.style.position = 'relative';\n     top.style.left = '0px';\n     top.style.top = '0px';\n     top.style.width = window.innerWidth + 'px';\n     top.style.height = window.innerWidth/8 + 'px';\n     containers.top = top;\n     hudElement.appendChild(top);\n   }\n   if(config.regions.left){\n   \n   }\n   if(config.regions.right){\n   \n   }\n   if(config.regions.bottom){\n     let bottom = document.createElement('div');\n     bottom.style.position = 'absolute';\n     bottom.style.left = '0px';\n     bottom.style.top = window.innerHeight - window.innerWidth/8 + 'px';\n     bottom.style.width = window.innerWidth + 'px';\n     bottom.style.height = window.innerWidth/8 + 'px';\n     containers.bottom = bottom;\n     hudElement.appendChild(bottom);\n   }\n   return containers;\n  }\n  \n}\n\n","export default {\n gameName:\"The Kingdom of Castle Bridge\",\n // https://emojipedia.org/  leave as \"\" if you want no emoji\n emoji:\"🏰\",\n // https://www141.lunapic.com/editor/  http://icoconvert.com/\n favicon:\"https://cdn.glitch.com/38098e30-bf12-4ed8-ba20-d2f4ba8f65a8%2Fcoin.gif?1543018269225\",\n theme:{\n  // https://fonts.google.com/ examples: Kirang Haerang, Megrim, Permanent Marker, Orbitron, Monoton\n  fontFamily:\"New Rocker\",\n  titleFontColor:\"#f2d15c\",\n  formFontColor:\"white\",\n  formColor:\"#0f3917\",\n  overlayColor:\"rgba(0,0,0, 0.7)\",\n  fontSize:2\n },\n avatar:{\n  models:[\n    {\n      url:\"https://cdn.glitch.com/d9ff495e-24db-4a3f-b88d-05ddd4e02632%2Fdragon_orange.glb?1543069720785\",\n      scale:0.62, yOffset:-1.3,\n      animations:{idle:\"Dragon_Flying\"},\n      msg:{color: 'orange',offset: '0 2 -0.51'},\n      thruster:{innerColor: \"red\",outerColor: \"white\"}\n    },\n    {\n      url:\"https://cdn.glitch.com/d9ff495e-24db-4a3f-b88d-05ddd4e02632%2Fdragon_blue.glb?1543070759125\",\n      scale:0.62, yOffset:-1.3,\n      animations:{idle:\"Dragon_Flying\"},\n      msg:{color: 'blue',offset: '0 2 -0.51'},\n      thruster:{innerColor: \"blue\",outerColor: \"white\"}\n    },\n    {\n      url:\"https://cdn.glitch.com/38098e30-bf12-4ed8-ba20-d2f4ba8f65a8%2FDragon_eyes.glb?1543064526277\",\n      scale:0.62, yOffset:-1.3,\n      animations:{idle:\"Dragon_Flying\"},\n      msg:{color: 'black',offset: '0 2 -0.51'},\n      thruster:{innerColor: \"black\",outerColor: \"white\"}\n    } \n    ],\n  buttonFaces: [\n    \"https://cdn.glitch.com/d9ff495e-24db-4a3f-b88d-05ddd4e02632%2Fdragon_orange.png?1543070170738\",\n    \"https://cdn.glitch.com/d9ff495e-24db-4a3f-b88d-05ddd4e02632%2Fdragon_blue.png?1543070754969\",\n    \"https://cdn.glitch.com/38098e30-bf12-4ed8-ba20-d2f4ba8f65a8%2Fdragon.png?1543064467876\",\n  ],\n  buttonColor: '#fff',\n  speed: 140\n },\n sounds:{\n  playerJoined: {url:'https://cdn.glitch.com/46b18376-7fa5-4e04-bd26-296207b88a74%2Ffanfare_with_timpani.mp3?1546619687984'},\n  playerLeft: {url:'https://cdn.glitch.com/7f007e49-e78d-40b6-964d-097554282381%2Ffarewell.mp3?1545526194837'},\n  yay: {url:'https://cdn.glitch.com/162b879e-fd42-40d9-8519-671d783b8c70%2Fyay.mp3?1538839840045',loop:false,volume:0.8},\n  splashIn: {url:'https://cdn.glitch.com/b10e1289-ada6-412c-a444-83b2ee39c4a0%2FsplashIn.mp3?1544623314600',loop:false,volume:0.8},\n  splashOut: {url:'https://cdn.glitch.com/b10e1289-ada6-412c-a444-83b2ee39c4a0%2FsplashOut.mp3?1544623312237',loop:false,volume:0.8},\n  hyperspace: {url:'https://cdn.glitch.com/7f007e49-e78d-40b6-964d-097554282381%2Fhyperspace.mp3?1545441819724',loop:false,volume:1.0} \n },\n // https://github.com/feiss/aframe-environment-component\n environment:{\n  preset:\"default\",\n  seed:0.3,\n  shadow:true,\n  playArea:1, \n  shadow:true,\n  shadowSize:10,\n  dressing:\"\",\n  dressingAmount:10, \n  dressingColor:\"\",\n  dressingScale:15,\n  dressingVariance:\"20 30 40\",\n  dressingUniformScale:false,\n  fog:0.4, \n  flatShading:false,\n  skyType:\"\", \n  horizonColor:\"\", \n  skyColor:\"\",\n  ground:\"\",\n  groundYScale:5,\n  groundTexture:\"walkernoise\",\n  groundColor:\"#032d26\",\n  groundColor2:\"#564d19\",\n  grid:\"\",\n  gridColor:\"\",\n  lighting:\"\",\n  lightPosition:\"\"\n },\n //Soundcloud track numbers from share/embed code\n bgm:{\n  songs: [95999380],\n  volume: 0.05,\n  playAll: true,\n  initialDelay: 5000\n },\n releasePointerLockOnUI: true,\n //SEE REF. http://keycode.info/\n keys:{\n  toggleUI:'Equal',\n  nextSong:'KeyP',\n  toggleMute:'Digit0',\n  toggleCursor:'KeyC'\n },\n showCursor:false,\n //Run printVoices() in the game browser console\n voice:{\n   name:'Oliver',\n   // from 0.1 to 10\n   rate: 1,\n   // from 0 to 2\n   pitch: 1,\n   // from 0 to 1\n   volume: 1,\n   // delay in milliseconds \n   welcomeDelay: 2000\n },\n physics:{\n   //This gravity affects the players\n   gravity: -9.8,\n   maxGrabDistance: 40,\n   //These objects are not affected by gravity or collisions, but you can grab and move them\n   // https://github.com/aframevr/aframe/blob/master/docs/components/geometry.md\n   // These objects require a unique name.\n   objects:[\n      {name:'Blue Sphere', geometry:'primitive: sphere; radius: 2',position:'50 75 -40',color:'#00f'},\n      {name:'Red Sphere', geometry:'primitive: sphere; radius: 2',position:'60 75 -40',color:'#f00'},\n      {name:'Green Sphere', geometry:'primitive: sphere; radius: 2',position:'70 75 -40',color:'#0f0'}\n    ]\n },\n collectibles:{\n   itemDefs:[\n     {type:'doge_coin',scale:'0.4 0.4 0.4',rotation:'0 0 0',threshold:3,\n      positions:['15 0 -30','-15 0 -30','12 0 -35','-12 0 -35','9 0 -40','-9 0 -40','6 0 -45','-6 0 -45',\n                '15 0 -65','-15 0 -65','12 0 -60','-12 0 -60','9 0 -55','-9 0 -55','6 0 -50','-6 0 -50'],\n      url:'https://cdn.glitch.com/14597f75-728f-4d7e-bbd2-202118ee70e0%2Fdoge_coin.glb?1542836614183',\n      collectSound:{url:'https://cdn.glitch.com/14597f75-728f-4d7e-bbd2-202118ee70e0%2Fcollect_bark_.mp3?1542837713162',volume:1},\n      collectParticles:{type:'magic',color:'#fff',scale:4},\n      callback:{name:'addPoints',params:{amount:100}},animation:{type:'rotY'}\n     }  \n   ]\n },\n readouts:{\n   itemDefs:[\n     {type:'scoreboard',scale:'16 10 0.1',color:'#a80003',\n      positions:['-79 48 -30','50 48 -30'],\n      rotations:['0 30 0','0 30 0'],\n      textAttributes:{value:'Welcome to\\nCastle Bridge',color:'white',scale:'9 9 1',align:'center',shader:'msdf',\n                      position:'0 -1.5 0',\n                      font:'https://raw.githubusercontent.com/etiennepinchon/aframe-fonts/master/fonts/newrocker/NewRocker-Regular.json'}\n     },\n     {type:'instructions',scale:'4 1.5 0.1',color:'#a80003',\n      positions:['1 2 -35'],\n      rotations:['0 0 0'],\n      textAttributes:{value:\n`Ye Olde Game Instructions:\n=========================\n1) Collect Doge Coins to earn credits.\n2) Spend your credits to ride the teleporters.\n3) Be Friendly!`,color:'white',scale:'0.7 0.7 1',align:'left',shader:'msdf',\n                      position:'-1.5 0 0',\n                      font:'https://raw.githubusercontent.com/etiennepinchon/aframe-fonts/master/fonts/newrocker/NewRocker-Regular.json'}\n     }  \n   ]\n },\n mobile:{\n   thruster_icon: \"https://cdn.glitch.com/162b879e-fd42-40d9-8519-671d783b8c70%2Fjump_fly_btn.png\",\n   joystick_outer_color: \"rgba(5, 31, 101, 0.2)\",\n   joystick_inner_color: \"rgba(5, 31, 101, 0.4)\"\n },\n vr: false\n}","import config from './client-config';\nexport default CS1=>{AFRAME.registerComponent('game', {\n  schema: {mode:{type: 'string',default:'standard'}},\n  init: function () {\n    CS1.game = this;\n    this.hasBegun = false;\n    this.config = config;\n    document.querySelector('#scene-container').style.display='block';\n    document.querySelector('#loading-screen').style.display='none';\n    CS1.player = document.querySelector('#player');\n  },\n  tick: function (time,dt) {\n    \n  }\n});}","export default CS1=>{\n  let socket = CS1.socket = io();\n  socket.on('connect',()=>{\n    console.log(`socket connected with id: ${socket.id}`);\n    console.log('Client.js can initialize my playerData now.');\n    socket.playerData = {position:{},rotation:{},faceIndex:0};\n    socket.lastPlayerData = {position:{},rotation:{},faceIndex:0};\n    \n    CS1.game.login = (un,pw)=>{\n      socket.emit('login',{name:un,pw:pw});\n    }\n    socket.on('login-results',data=>{\n      console.log(data);\n      if(data.success) {\n       document.querySelector('#login').style.zIndex = -1;\n       document.querySelector('#login').style.display = 'none'; \n      }\n      else document.getElementById('login-msg').innerHTML = data.msg;\n      CS1.game.hasBegun = true;\n      let playerData = {};\n      let pos = CS1.player.getAttribute('position');\n      pos.x = Number(pos.x.toFixed(2));\n      pos.y = Number(pos.y.toFixed(2));\n      pos.z = Number(pos.z.toFixed(2));\n      playerData.position = pos;\n      let rot = CS1.player.getAttribute('rotation');\n      rot.x = Number(Number(rot.x).toFixed(1));\n      rot.y = Number(Number(rot.y).toFixed(1));\n      rot.z = Number(Number(rot.z).toFixed(1));\n      playerData.rotation = rot;\n      socket.emit('new-player',playerData);\n    });\n    \n    socket.on('disconnect',e=>{\n      \n    });\n    \n  });\n}","export default CS1=>{AFRAME.registerComponent(\"collectible\", {\n\tschema: {\n\t\t//collectSound: {type: 'selector', default: '#collect-sound'},\n    threshold: {type: 'number', default: 2.0},\n    collectSound: {type: 'string',default:'https://cdn.glitch.com/630690db-5297-4f44-9d50-b6fb8e795635%2Fcollect.mp3?1551286422648'}\n\t},\n\tinit: function()\n\t{\n    this.el.setAttribute('sound',`src:url(${this.data.collectSound})`);\n    if(!CS1.collectibles)CS1.collectibles=[];\n    CS1.collectibles.push(this);\n    this.soundIsPlaying=false;\n    if(!CS1.socket._callbacks[\"$request-for-collectibles\"])\n    CS1.socket.on('request-for-collectibles',()=>{\n      CS1.socket.emit('initial-collectibles-state', CS1.collectibles.length);\n    });\n    if(!CS1.socket._callbacks[\"$update-collectible\"])\n    CS1.socket.on('update-collectible',data=>{\n      let collectedEntity = CS1.collectibles[data.index];\n      collectedEntity.el.setAttribute('visible',false);\n      collectedEntity.soundIsPlaying=true;\n      collectedEntity.el.components.sound.playSound();\n      collectedEntity.el.addEventListener('sound-ended',e=>{\n        collectedEntity.pause();  \n      });\n      if(data.collector==CS1.socket.id){\n        CS1.hud.pointsDial.animateTo(CS1.hud.pointsDial.value+5);\n      }\n    });\n  }, \n\ttick: function()\n\t{   \n     if(this.el.object3D.position.distanceTo(CS1.player.object3D.position) < this.data.threshold){ \n       this.collect();\n     }\n\t\t\n\t},\n  \n  collect: function(){\n    if(this.soundIsPlaying)return;\n    if(CS1.socket.disconnected){\n      this.el.setAttribute('visible',false);\n      this.soundIsPlaying=true;\n      this.el.components.sound.playSound();\n      CS1.hud.pointsDial.animateTo(CS1.hud.pointsDial.value+5);\n      this.el.addEventListener('sound-ended',e=>{\n        this.pause();\n      }); \n    } else{\n      CS1.socket.emit('request-collection',{index: CS1.collectibles.indexOf(this)}); \n    \n    }\n \n  }\n  \n  \n})\n  \n}","export default(()=>{\nwindow.onload = e=>{\n  let loginHTML = `\n<div class=\"modal fade\" id=\"login-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"display: block;\">\n    <div class=\"modal-dialog\">\n\t\t  <div class=\"loginmodal-container\">\n\t\t\t\t\t<h1>CS1</h1><br>\n\t\t\t\t  <form id=\"login-form\">\n\t\t\t\t\t  <input id=\"name\" type=\"text\" name=\"user\" placeholder=\"Username\">\n\t\t\t\t\t  <input id=\"pw\" type=\"password\" name=\"pass\" placeholder=\"Password\">\n\t\t\t\t\t  <input id=\"login-submit\" type=\"submit\" name=\"login\" class=\"login loginmodal-submit\" >\n            <div id='login-msg'></div>\n\t\t\t\t  </form>\n\t\t\t</div>\n\t</div>\n</div>\n`\n let loginContainer = document.querySelector('#login');\n loginContainer.innerHTML = loginHTML;\n setTimeout(e=>{\n   if(!(CS1 && CS1.socket.connected)){\n     document.getElementById('login-msg').innerHTML = 'OFFLINE MODE';\n     document.getElementById('login-submit').setAttribute('value','Play Game Offline');\n   }\n },1000);\n document.getElementById('login-form').addEventListener(\"submit\",function(e) {\n    e.preventDefault(); \n    if(!(CS1 && CS1.socket.connected)){\n      loginContainer.style.zIndex = -1;\n    }\n    else if(document.getElementById('name').value.length > 0 && document.getElementById('pw').value.length > 0){\n      CS1.game.login(document.getElementById('name').value,document.getElementById('pw').value);\n      document.getElementById('name').value = '';\n      document.getElementById('pw').value = '';\n    }\n  });\n  \n}\n  \n})()\n","/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (!window.AFRAME) {\n\t    var Component = function (el, id) {\n\t        var self = this;\n\t        this.el = el;\n\t        this.el;\n\t        this.id = id;\n\t        this.attrName = this.name + (id ? '__' + id : '');\n\t        this.el.components[this.attrName] = this;\n\t        this.data = {};\n\t    };\n\n\t    var System = function (el) {\n\t        var self = this;\n\t        this.el = this.sceneEl = el;\n\t        this.el.systems[this.name] = this;\n\t    };\n\n\t    AFRAME = {\n\t        components: {},\n\t        systems: {},\n\t        registerShader: function () {}\n\t    };\n\n\t    AFRAME.registerComponent = function (name, definition) {\n\t        var NewComponent;\n\t        var proto = {};\n\n\t        Object.keys(definition).forEach(function (key) {\n\t            proto[key] = {\n\t                value: definition[key],\n\t                writable: true\n\t            };\n\t        });\n\n\t        NewComponent = function (el, attr, id) {\n\t            Component.call(this, el, attr, id);\n\t        };\n\n\t        NewComponent.prototype = Object.create(Component.prototype, proto);\n\t        NewComponent.prototype.name = name;\n\t        NewComponent.prototype.constructor = NewComponent;\n\n\t        AFRAME.components[name] = NewComponent;\n\t        return NewComponent;              \n\t    };\n\n\t    AFRAME.registerSystem = function (name, definition) {\n\t        var NewSystem;\n\t        var proto = {};\n\n\t        Object.keys(definition).forEach(function (key) {\n\t            proto[key] = {\n\t                value: definition[key],\n\t                writable: true\n\t            };\n\t        });\n\n\t        NewSystem = function (el, attr, id) {\n\t            System.call(this, el, attr, id);\n\t        };\n\n\t        NewSystem.prototype = Object.create(System.prototype, proto);\n\t        NewSystem.prototype.name = name;\n\t        NewSystem.prototype.constructor = NewSystem;\n\n\t        AFRAME.systems[name] = NewSystem;\n\t        return NewSystem;              \n\t    };\n\n\t    var fx = function(renderer, scene, cameras) {\n\t        this.sceneEl = this;\n\t        this.renderTarget = null;\n\t        this.renderer = renderer;\n\t        this.object3D = scene;\n\t        this.cameras = Array.isArray(cameras) ? cameras : [cameras];\n\t        this.components = {};\n\t        this.systems = {};\n\t        this.isPlaying = true;\n\t        this.systems.effects = new AFRAME.systems.effects(this)\n\t        this.systems.effects.init();\n\t    };\n\n\t    fx.prototype = Object.create({}, {\n\t        chain: {\n\t            value: function(chain) {\n\t                var sys = this.systems.effects, self = this;\n\t                var oldData = sys.data;\n\t                sys.data = chain;\n\t                sys.update(oldData);\n\t                sys.tick(0,0);\n\t            }\n\t        },\n\n\t        camera: {\n\t            set: function(cameras) {\n\t                this.cameras = Array.isArray(cameras) ? cameras : [cameras];\n\t            },\n\t            \n\t            get: function () {\n\t                return this.cameras[0];\n\t            }\n\t        },\n\n\t        scene: {\n\t            set: function(v) {\n\t                this.object3D = v;\n\t            },\n\t            \n\t            get: function () {\n\t                return this.object3D;\n\t            }\n\t        },\n\n\t        init: {\n\t            value: function(name) {\n\t                this.remove(name);\n\t                var arr = name.split(\"__\");\n\t                var pro = AFRAME.components[arr[0]];\n\t                if(!pro) return null;\n\t                var obj = new pro(this, arr[1]);\n\t                if(obj.schema.type || obj.schema.default) {\n\t                    obj.data = obj.schema.default;\n\t                } else {\n\t                    for(var i in obj.schema) {\n\t                        obj.data[i] = obj.schema[i].default;\n\t                    }\n\t                }\n\t                if(obj.init) obj.init();\n\t                if(obj.update) obj.update({});\n\t                return obj;\n\t            }\n\t        },\n\n\t        update: {\n\t            value: function(name, data) {\n\t                var obj = this.components[name];\n\t                if(!obj) { obj = this.init(name); }\n\t                if(!obj || data === undefined) return;\n\t                \n\t                var oldData = obj.data, nd = obj.data, schema = obj.schema;\n\t                if (obj.schema.type || obj.schema.default) {\n\t                    obj.data = data;\n\t                } else {\n\t                    oldData = {};\n\t                    for(var o in nd) {\n\t                        oldData[o] = nd[o];\n\t                        if (data[o]) nd[o] = data[o]; \n\t                    }\n\t                }\n\t                if(obj.update) obj.update(oldData);\n\t            }\n\t        },\n\n\t        remove: {\n\t            value: function(name) {\n\t                var obj = this.components[name];\n\t                if(obj && obj.remove) { obj.remove(); }\n\t                delete this.components[name];\n\t            }\n\t        },\n\n\t        render: { \n\t            value: function(time) {\n\t                var behaviors = this.components;\n\t                var sys = this.systems.effects;\n\n\t                var timeDelta = this.time ? time - this.time : 0;\n\t                this.time = time;\n\n\t                for(var b in behaviors) {\n\t                    var behavior = behaviors[b];\n\t                    if (behavior.tick) behavior.tick(time, timeDelta);\n\t                }\n\n\t                sys.tick(time, timeDelta);\n\t                sys.cameras = this.cameras;\n\n\t                for(var b in behaviors) {\n\t                    var behavior = behaviors[b];\n\t                    if (behavior.tock) behavior.tock(time, timeDelta);\n\t                }\n\n\t                sys.tock(time, timeDelta);\n\t            }\n\t        }\n\t    });\n\n\t    window.AFRAME.Effects = fx;\n\t}\n\n\t__webpack_require__(1)\n\t__webpack_require__(3)\n\t__webpack_require__(17)\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t// Copyright 2017-2018 Yannis Gravezas <wizgrav@gmail.com> MIT licensed\n\n\tAFRAME.registerSystem(\"effects\", {\n\t    schema: { type: \"array\", default: [] },\n\n\t    init: function () {\n\t        this.effects = {};\n\t        this.passes = [];\n\t        this._passes = [];\n\t        this.cameras = [];\n\t        this.setupPostState();\n\t        this.needsOverride = true;\n\t        this.lightComponents = [];\n\t\t\tthis.LightState = {\n\t\t\t\trows: 0,\n\t\t\t\tcols: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\ttileData: { value: null },\n\t\t\t\ttileTexture: { value: null },\n\t\t\t\tlightTexture: {\n\t\t\t\t\tvalue: new THREE.DataTexture( new Float32Array( 32 * 2 * 4 ), 32, 2, THREE.RGBAFormat, THREE.FloatType )\n\t\t\t\t},\n\t\t\t};\n\t    },\n\n\t    update: function () {\n\t        this.needsUpdate = true;\n\t    },\n\t    \n\t    addLight: function (behavior) {\n\t\t\tthis.lightComponents.push(behavior);\n\t\t},\n\t\t\n\t\tremoveLight: function (behavior) {\n\t\t\tvar index = this.lightComponents.indexOf(behavior);\n\t\t\tthis.lightComponents.splice(index);\n\t    },\n\t    \n\t    setupPostState: function () {\n\t        this.renderTarget = new THREE.WebGLRenderTarget(1, 1, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat });\n\t        this.renderTarget.texture.generateMipmaps = false;\n\t        this.renderTarget.depthBuffer = true;\n\t        this.renderTarget.depthTexture = new THREE.DepthTexture();\n\t        this.renderTarget.depthTexture.type = THREE.UnsignedShortType;\n\t        this.renderTarget.depthTexture.minFilter = THREE.LinearFilter;\n\t        this.renderTarget.stencilBuffer = false;\n\t        this.scene = new THREE.Scene();\n\t        this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\t        this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n\t        this.quad.frustumCulled = false;\n\t        this.scene.add(this.quad);\n\t        this.sceneLeft = new THREE.Scene();\n\t        this.quadLeft = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n\t        this.quadLeft.geometry.attributes.uv.array.set([0, 1, 0.5, 1, 0, 0, 0.5, 0]);\n\t        this.quadLeft.frustumCulled = false;\n\t        this.sceneLeft.add(this.quadLeft);\n\t        this.sceneRight = new THREE.Scene();\n\t        this.quadRight = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n\t        this.quadRight.geometry.attributes.uv.array.set([0.5, 1, 1, 1, 0.5, 0, 1, 0]);\n\t        this.quadRight.frustumCulled = false;\n\t        this.sceneRight.add(this.quadRight);\n\t        this.targets = [\n\t            new THREE.WebGLRenderTarget(1, 1, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat }),\n\t            new THREE.WebGLRenderTarget(1, 1, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat })\n\t        ];\n\t        \n\t        this.tDiffuse = {type: \"t\", value: null};\n\t        this.tDepth = {type: \"t\", value: this.renderTarget.depthTexture};\n\t        this.cameraFar = {type: \"f\", value: 0};\n\t        this.cameraNear = {type: \"f\", value: 0};\n\t        this.time = { type: \"f\", value: 0 };\n\t        this.timeDelta = { type: \"f\", value: 0 };\n\t        this.uvClamp = { type: \"v2\", value: this.uvBoth };\n\t        this.resolution = { type: \"v4\", value: new THREE.Vector4() };\n\n\t    },\n\n\t    vertexShader: [\n\t        '#include <common>',\n\t        'varying vec2 vUv;',\n\t        'void main() {',\n\t        '   vUv = uv;',\n\t        '   gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\t        '}'\n\t    ].join('\\n'),\n\n\t    uvLeft: new THREE.Vector2(0, 0.5),\n\t    uvRight: new THREE.Vector2(0.5, 1),\n\t    uvBoth: new THREE.Vector2(0, 1),\n\n\t    parseToken: /([#a-z0-9\\-\\_]+)\\.{0,1}([#a-z0-9\\-\\_]*)\\s*\\({0,1}\\s*([\\$a-z0-9\\-\\_\\.\\s]*)\\){0,1}([\\!\\?]{0,1})/i,\n\n\t    renderPass: function (material, renderTarget, viewCb, forceClear){\n\t        var renderer = this.sceneEl.renderer;\n\t        this.quad.material = material;\n\t        var isFn = typeof viewCb === \"function\";\n\t        var s = renderTarget || renderer.getSize();\n\t        this.resolution.value.set(s.width, s.height, 1/s.width, 1/s.height);\n\t        var oldClear = renderer.autoClear;\n\t        renderer.autoClear = false;\n\t        if (viewCb) {\n\t            if (this.cameras.length > 1){\n\t                this.quadLeft.material = material;\n\t                this.uvClamp.value = this.uvLeft;\n\t                setView(0, 0, Math.round(s.width * 0.5), s.height);\n\t                if (isFn) viewCb(material, this.cameras[0], -1);\n\t\t\t\t    renderer.render(this.sceneLeft, this.camera, renderTarget, oldClear || forceClear);        \n\t                \n\t                this.quadRight.material = material;\n\t                this.uvClamp.value = this.uvRight;\n\t                setView(Math.round(s.width * 0.5), 0, Math.round(s.width * 0.5), s.height);\n\t                if (isFn) viewCb(material, this.cameras[1], 1);\n\t                renderer.render( this.sceneRight, this.camera, renderTarget);\n\n\t                this.uvClamp.value = this.uvBoth;\n\t                setView(0, 0, s.width, s.height);\n\t            } else {\n\t                setView(0, 0, s.width, s.height);\n\t                if (isFn) viewCb(material, this.sceneEl.camera, 0);\n\t                renderer.render( this.scene, this.camera, renderTarget, oldClear || forceClear);\n\t            }\n\t        } else {\n\t            setView(0, 0, s.width, s.height);\n\t            renderer.render(this.scene, this.camera, renderTarget, oldClear || forceClear);\n\t        }\n\t        renderer.autoClear = oldClear;\n\t        function setView(x,y,w,h) {\n\t            if (renderTarget) {\n\t                renderTarget.viewport.set( x, y, w, h );\n\t\t\t\t\trenderTarget.scissor.set( x, y, w, h );\n\t            } else {\n\t                renderer.setViewport( x, y, w, h );\n\t\t\t\t\trenderer.setScissor( x, y, w, h );\n\t            }\n\t        }\n\t    },\n\n\t    materialize: function (m) {\n\t        var fs = [\n\t            \"uniform vec2 uvClamp;\",\n\t            \"vec4 textureVR( sampler2D sampler, vec2 uv ) {\",\n\t            \" return texture2D(sampler, vec2(clamp(uv.x, uvClamp.x, uvClamp.y), uv.y));\",\n\t            \"} \",\n\t            m.fragmentShader            \n\t        ].join(\"\\n\");\n\t        \n\t        m.uniforms.uvClamp = this.uvClamp;\n\t        \n\t        return new THREE.ShaderMaterial({\n\t            uniforms: m.uniforms,\n\t            vertexShader: m.vertexShader || this.vertexShader,\n\t            fragmentShader: fs,\n\t            depthWrite: false,\n\t            depthTest: false,\n\t            blending: THREE.NoBlending,\n\t            fog: false,\n\t            extensions: {\n\t                derivatives: true\n\t            },\n\t            defines: m.defines || {}\n\t        });\n\t    },\n\n\t    fuse: function (temp, alpha) {\n\t        if (!temp.length) return;\n\t        var self = this, count=0;\n\t        var chunks = [], head = [], main = [], includes = {}, \n\t            needsDepth = false, needsDiffuse = false, k;\n\t \n\t        var uniforms = {\n\t            time: this.time,\n\t            timeDelta: this.timeDelta,\n\t            resolution: this.resolution\n\t        };\n\n\t        temp.forEach(function (obj) {\n\t            var callMain = true, swapMain = false, args=[];\n\t            if (typeof obj === \"string\") {\n\t                var tok = self.parseToken.exec(obj);\n\t                if(!tok) return;\n\t                \n\t                callMain = tok[4] !== \"!\";\n\t                swapMain = tok[4] === \"?\";\n\t                obj = tok[1];\n\t                var prop = tok[2];\n\t                var temp = {};\n\t                \n\t                if(obj[0] === \"#\") {\n\t                    var el = document.querySelector(obj);\n\t                    if(!el) return;\n\t                    \n\t                    obj = {\n\t                        attrName: [obj.replace(\"#\", \"script_\"), \"_\", (count++), \"_\"].join(\"\"),\n\t                        fragment: prop ? \n\t                            (el[prop] instanceof Document ? el[prop].body.textContent : el[prop]) \n\t                            : el.textContent,\n\t                        depth: el.dataset.depth !== undefined,\n\t                        diffuse: el.dataset.diffuse !== undefined,\n\t                        includes: el.dataset.includes ? el.dataset.includes.trim().split(\" \") : null,\n\t                        defaults: el.dataset.defaults ? el.dataset.defaults.trim().split(\" \") : null\n\t                    };\n\t                } else {\n\t                    obj = self.effects[obj];\n\t                    if (!obj) return;\n\t                    if (prop) {\n\t                        obj = obj.exports ? obj.exports[prop] : null;\n\t                        if (!obj) return;\n\t                        obj.attrName = tok[1] + \"_\" + prop + \"_\";\n\t                    }\n\t                }\n\t                if (tok[3]) {\n\t                    args = tok[3].trim().split(\" \");\n\t                }\n\t            }\n\t            var prefix = (obj.attrName ? obj.attrName : \"undefined_\" + (count++)) + \"_\";\n\t            prefix = prefix.replace(\"__\",\"_\");\n\t            if (obj.defaults) {\n\t                obj.defaults.forEach(function (d, i) {\n\t                    var v = args[i];\n\t                    chunks.push([\"#define $\", i, \" \", v  && v !== \"$\" ? v : d ].join(\"\").replace(/\\$/g, prefix).replace(\"__\",\"_\"));\n\t                });\n\t            }\n\t            if (obj.diffuse) { needsDiffuse = true; }\n\t            if (obj.depth) { needsDepth = true; }\n\t            if (obj.fragment) { chunks.push(obj.fragment.replace(/\\$/g, prefix)); }\n\t            if (obj.uniforms) {\n\t                for (var u in obj.uniforms) {\n\t                    uniforms[prefix + u] = obj.uniforms[u];\n\t                }\n\t            };\n\t            if (obj.includes) {\n\t                obj.includes.forEach(function (inc) {\n\t                    includes[inc] = true;\n\t                });\n\t            }\n\t            if (callMain) {\n\t                main.push([\"  \", prefix, \"main(\", ( swapMain ? \"origColor, color\": \"color, origColor\"), \", vUv, depth);\"].join(\"\"));\n\t            }\n\t        });\n\t        var t2u = { \"i\": \"int\", \"f\": \"float\", \"t\": \"sampler2D\",\n\t            \"v2\": \"vec2\", \"v3\": \"vec3\", \"c\": \"vec3\",\"v4\": \"vec4\", \n\t            \"m2\": \"mat2\", \"m3\":\"mat3\", \"m4\": \"mat4\", \"b\": \"bool\" };\n\n\t        for(k in includes) { head.push(\"#include <\" + k + \">\"); }\n\t        \n\t        var premain = [\n\t            \"void main () {\" \n\t        ];\n\t        uniforms[\"tDiffuse\"] = this.tDiffuse;\n\t             \n\t        if (needsDiffuse){\n\t             premain.push(\"  vec4 color = texture2D(tDiffuse, vUv);\"); \n\t        } else {\n\t             premain.push(\"  vec4 color = vec4(0.0);\"); \n\t        }\n\t        premain.push(\"  vec4 origColor = color;\"); \n\t        \n\t        uniforms[\"tDepth\"] = this.tDepth;\n\t        uniforms[\"cameraFar\"] = this.cameraFar;\n\t        uniforms[\"cameraNear\"] = this.cameraNear;\n\t            \n\t        if (needsDepth){\n\t            premain.push(\"  float depth = texture2D(tDepth, vUv).x;\");\n\t        } else {\n\t            premain.push(\"  float depth = 0.0;\");\n\t        }\n\t        \n\t        for(k in uniforms) {\n\t            var u = uniforms[k];\n\t            head.push([\"uniform\", t2u[u.type], k, \";\"].join(\" \"));\n\t        }\n\t        \n\t        head.push(\"varying vec2 vUv;\");\n\t        var source = [\n\t            head.join(\"\\n\"), chunks.join(\"\\n\"), \"\\n\",\n\t                premain.join(\"\\n\"), main.join(\"\\n\"), \n\t                alpha ? \"  gl_FragColor = color;\" : \"  gl_FragColor = vec4(color.rgb, 1.0);\", \"}\"\n\t        ].join(\"\\n\");\n\n\t        var material = this.materialize({\n\t            fragmentShader: source, \n\t            uniforms: uniforms\n\t        });\n\n\t        if(this.sceneEl.components.debug) console.log(source, material);\n\t        return material;\n\t    },\n\n\t    rebuild: function () {\n\t        var self = this, passes = [], temp = [];\n\t        this.passes.forEach(function(pass){\n\t            if (pass.dispose) pass.dispose();\n\t        });\n\t        this.data.forEach(function (k) {\n\t            if(!k){\n\t                pickup();\n\t                return;\n\t            }\n\t            var obj, name;\n\t            var tok = self.parseToken.exec(k);\n\t            if(!tok || !tok[1]) return;\n\t            name = tok[1];\n\t            obj = self.effects[name];\n\t            if (!obj){\n\t                temp.push(k);\n\t                return;\n\t            }\n\t            if (obj.pass) {\n\t                pickup();\n\t                passes.push({ pass: obj.pass, behavior: obj } );\n\t            } else if (obj.material){\n\t                pickup();\n\t                passes.push({ pass: makepass(obj.material, false, obj.vr), behavior: obj });\n\t            } else {\n\t                temp.push(k);\n\t            }          \n\t        });\n\n\t        function pickup () {\n\t            if (!temp.length) return;\n\t            passes.push({ pass: makepass(self.fuse(temp), true)});\n\t            temp = [];\n\t        }\n\n\t        function makepass (material, dispose, viewCb) {\n\t            return {\n\t                render: function(renderer, writeBuffer, readBuffer){\n\t                    self.renderPass(material, writeBuffer, viewCb);\n\t                },\n\n\t                dispose: function () {\n\t                    if (dispose) material.dispose();\n\t                }\n\t            }\n\t        }\n\t        pickup();\n\t        this.needsUpdate = false;\n\t        this.passes = passes;\n\t    },\n\n\t    isActive: function (behavior, resize) {\n\t        var scene = this.sceneEl;\n\t        if (behavior.bypass) return false;\n\t        var isEnabled = scene.renderTarget ? true : false;\n\t        if (!isEnabled) return false;\n\t        if (resize && (this.needsResize || behavior.needsResize) && behavior.setSize) {\n\t            var size = scene.renderer.getSize();\n\t            behavior.setSize(size.width, size.height);\n\t            delete behavior.needsResize;\n\t        }\n\t        return true;\n\t    },\n\n\t    register: function (behavior) {\n\t        this.effects[behavior.attrName] = behavior;\n\t        this.needsUpdate = true;\n\t    },\n\n\t    unregister: function (behavior) {\n\t        delete this.effects[behavior.attrName];\n\t        this.needsUpdate = true;\n\t    },\n\n\t    tick: function (time, timeDelta) {\n\t        var self = this, sceneEl = this.sceneEl, renderer = sceneEl.renderer, effect = sceneEl.effect, \n\t            rt = this.renderTarget, rts = this.targets, scene = sceneEl.object3D;\n\t        if(!rt || !renderer) { return; }\n\t        if (this.needsOverride) {\n\t            if(scene.onBeforeRender) {\n\t                scene.onBeforeRender = function (renderer, scene, camera) {\n\t                    var size = renderer.getSize();\n\t                    if (size.width !== rt.width || size.height !== rt.height) {\n\t                        rt.setSize(size.width, size.height);\n\t                        rts[0].setSize(size.width, size.height);\n\t                        rts[1].setSize(size.width, size.height);\n\t                        self.resolution.value.set(size.width, size.height, 1/size.width, 1/size.height);\n\t                        self.needsResize = true;\n\t                        self.resizeTiles();\n\t                    }\n\t                    if(camera instanceof THREE.ArrayCamera) {\n\t                        self.cameras = camera.cameras;\n\t                    } else {\n\t                        self.cameras.push(camera);\n\t                    }\n\t                    self.tileLights(renderer, scene, camera);\n\t                }\n\t            } else {\n\t                var rendererRender = renderer.render;\n\t                renderer.render = function (scene, camera, renderTarget, forceClear) {\n\t                    if (renderTarget === rt) {\n\t                        var size = renderer.getSize();\n\t                        if (size.width !== rt.width || size.height !== rt.height) {\n\t                            rt.setSize(size.width, size.height);\n\t                            rts[0].setSize(size.width, size.height);\n\t                            rts[1].setSize(size.width, size.height);\n\t                            self.resolution.value.set(size.width, size.height, 1/size.width, 1/size.height);\n\t                            self.needsResize = true;\n\t                        }\n\t                        self.cameras.push(camera);\n\t                    }\n\t                    rendererRender.call(renderer, scene, camera, renderTarget, forceClear);\n\t                }\n\t            }        \n\t            this.needsOverride = false;\n\t        }\n\t        this.cameras = [];\n\t        this.time.value = time / 1000;\n\t        this.timeDelta.value = timeDelta / 1000;\n\n\t        if (this.needsUpdate === true) { this.rebuild(); }\n\n\t       this.setupPasses();\n\n\t        this.tDiffuse.value = this.renderTarget.texture;\n\t        this.tDepth.value = this.renderTarget.depthTexture;\n\t        var camera = this.sceneEl.camera;\n\t        this.cameraFar.value = camera.far;\n\t        this.cameraNear.value = camera.near;                \n\t    },\n\n\t    setupPasses : function () {\n\t        var arr = [], rt = this.renderTarget;\n\t        this.passes.forEach(function (p) {\n\t            if (p.behavior && p.behavior.bypass === true) return;\n\t            arr.push(p);\n\t        });\n\t        this.sceneEl.renderTarget = arr.length && this.sceneEl.isPlaying ? rt : null;\n\t        this._passes = arr;\n\t    },\n\t    tock: function () {\n\t        var scene = this.sceneEl, renderer = scene.renderer, self = this;\n\t        if(!scene.renderTarget) { return; }\n\t        var rt = scene.renderTarget, rts = this.targets;\n\t        this._passes.forEach(function (pass, i) {\n\t            var r = i ? rts[i & 1] : rt;\n\t            self.tDiffuse.value = r.texture;   \n\t            if (pass.behavior && pass.behavior.resize) self.isActive(pass.behavior, true);\n\t            pass.pass.render(renderer, i < self._passes.length - 1 ? rts[(i+1) & 1] : null, r);\n\t        });\n\t        this.needsResize = false;\n\t    },\n\n\t    resizeTiles: function () {\n\t        var LightState = this.LightState;\n\t        var width = LightState.width;\n\t        var height = LightState.height;\n\t        LightState.cols = Math.ceil( width / 32 );\n\t        LightState.rows = Math.ceil( LightState.height / 32 );\n\t        LightState.tileData.value = [ width, height, 0.5 / Math.ceil( width / 32 ), 0.5 / Math.ceil( height / 32 ) ];\n\t        LightState.tileTexture.value = new THREE.DataTexture( new Uint8Array( LightState.cols * LightState.rows * 4 ), LightState.cols, LightState.rows );\n\t    },\n\t    \n\t    tileLights: function ( renderer, scene, camera ) {\n\t        if ( ! camera.projectionMatrix ) return;\n\t        var LightState = this.LightState, lights = this.lightComponents;\n\t        var size = renderer.getSize();\n\t        var d = LightState.tileTexture.value.image.data;\n\t        var ld = LightState.lightTexture.value.image.data;\n\t        var viewMatrix = camera.matrixWorldInverse;\n\t        d.fill( 0 );\n\t        var vector = new THREE.Vector3();\n\n\t        var passes;\n\t        if(camera instanceof THREE.ArrayCamera) {\n\t            passes = [ [0.5, 0, camera.cameras[0]], [0.5, 0.5, camera.cameras[1]]];\n\t        } else {\n\t            passes = [1.0, 0, camera];\n\t        }\n\t        passes.forEach(function(pass){\n\t            lights.forEach( function ( light, index ) {\n\t                vector.setFromMatrixPosition( light.el.object3D.matrixWorld );\n\t                var pw = LightState.width * pass[0];\n\t                var pm = LightState.width * pass[1];\n\t                var bs = self.lightBounds( pass[2], vector, light.data.radius, pw );\n\t                vector.applyMatrix4( viewMatrix );\n\t                vector.toArray( ld, 4 * index );\n\t                ld[ 4 * index + 3 ] = light.data.radius;\n\t                light.data.color.toArray( ld, 32 * 4 + 4 * index );\n\t                ld[ 32 * 4 + 4 * index + 3 ] = light.data.decay;\n\t                if ( bs[ 1 ] < 0 || bs[ 0 ] > pw || bs[ 3 ] < 0 || bs[ 2 ] > LightState.height ) return;\n\t                if ( bs[ 0 ] < 0 ) bs[ 0 ] = 0;\n\t                if ( bs[ 1 ] > pw ) bs[ 1 ] = pw;\n\t                if ( bs[ 2 ] < 0 ) bs[ 2 ] = 0;\n\t                if ( bs[ 3 ] > LightState.height ) bs[ 3 ] = LightState.height;\n\t                var i4 = Math.floor( index / 8 ), i8 = 7 - ( index % 8 );\n\t                for ( var i = Math.floor( bs[ 2 ] / 32 ); i <= Math.ceil( bs[ 3 ] / 32 ); i ++ ) {\n\t                    for ( var j = Math.floor( (bs[ 0 ] + pm) / 32  ); j <= Math.ceil( (bs[ 1 ] + pm) / 32 ); j ++ ) {\n\t                        d[ ( LightState.cols * i + j ) * 4 + i4 ] |= 1 << i8;\n\t                    }\n\t                }\n\t            } );\n\t        });\n\t        LightState.tileTexture.value.needsUpdate = true;\n\t        LightState.lightTexture.value.needsUpdate = true;\n\t    },\n\t    \n\t    lightBounds: function () {  \n\t        let v = new THREE.Vector3();\n\t        return function ( camera, pos, r, w ) {\n\t            var LightState = this.LightState;\n\t            var minX = w, maxX = 0, minY = LightState.height, maxY = 0, hw = w / 2, hh = LightState.height / 2;\n\t            for ( var i = 0; i < 8; i ++ ) {\n\t                v.copy( pos );\n\t                v.x += i & 1 ? r : - r;\n\t                v.y += i & 2 ? r : - r;\n\t                v.z += i & 4 ? r : - r;\n\t                var vector = v.project( camera );\n\t                var x = ( vector.x * hw ) + hw;\n\t                var y = ( vector.y * hh ) + hh;\n\t                minX = Math.min( minX, x );\n\t                maxX = Math.max( maxX, x );\n\t                minY = Math.min( minY, y );\n\t                maxY = Math.max( maxY, y );\n\t            }\n\t            return [ minX, maxX, minY, maxY ];\n\t    };\n\t    }()\n\t});\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(8);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(16);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t// Sobel and freichen shaders from three.js examples\n\n\tAFRAME.registerComponent(\"outline\", {\n\t\tmultiple: true,\n\n\t    schema: {\n\t\t\tenabled: { default: true },\n\t        color: { type: \"color\", default: \"#000000\" },\n\t\t\twidth: { type: \"vec2\", default: new THREE.Vector2(1,1) },\n\t\t\trange: { type: \"vec2\", default: new THREE.Vector2(0,1500) },\n\t\t\tstrength: {type: \"number\", default: 1},\n\t\t\tratio: { type: \"number\", default: 0.5 },\n\t\t\tsmooth: { default: false }  \n\t\t},\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\t        this.renderTarget = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t\t\tthis.blurTarget = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t\t\tthis.needsResize = true;\n\t\t\tthis.resolution = { type: \"v4\", value: new THREE.Vector4()};\n\t\t\tthis.tockUniforms = {\n\t\t\t\tresolution: this.resolution,\n\t            color: { type: \"c\", value: new THREE.Color() },\n\t\t\t\twidth: { type: \"v2\", value: null },\n\t\t\t\trange: { type: \"v2\", value: null },\n\t\t\t\tstrength: { type: \"f\", value: 1 }\n\t        };\n\t\t\t\n\t\t\tthis.blurDirection = { type: \"v2\", value: new THREE.Vector2()};\n\t\t\t\n\t\t\tthis.exports = {\n\t\t\t\tsobel: {\n\t\t\t\t\tfragment: this.sobel,\n\t\t\t\t\tuniforms: this.tockUniforms,\n\t\t\t\t\tincludes: [\"packing\"],\n\t\t\t\t\tdepth: true\n\t\t\t\t},\n\n\t\t\t\tblur: {\n\t\t\t\t\tfragment: this.blur,\n\t\t\t\t\tuniforms: { resolution: this.tockUniforms.resolution, direction: this.blurDirection },\n\t\t\t\t\tdiffuse: true\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.currentMaterial = this.system.fuse([this.exports.sobel], true);\n\n\t\t\t\n\t\t\tthis.blurMaterial = this.system.fuse([this.exports.blur], true);\n\n\t\t\tthis.uniforms = {\n\t\t\t\ttexture: { type: \"t\", value: this.renderTarget.texture }\n\t\t\t}\n\t\t\t\n\t\t\tthis.system.register(this);\n\t    },\n\n\t    update: function (oldData) {\n\t\t\tthis.bypass = !this.data.enabled;\n\t        this.tockUniforms.color.value.set(this.data.color);\n\t\t\tthis.tockUniforms.width.value = this.data.width;\n\t\t\tthis.tockUniforms.range.value = this.data.range;\n\t\t\tthis.tockUniforms.strength.value = 1 / this.data.strength;\n\t    },\n\n\t\tsetSize: function(w, h) {\n\t\t\tw = Math.round(w * this.data.ratio);\n\t\t\th = Math.round(h * this.data.ratio);\n\t\t\tthis.renderTarget.setSize(w,h);\n\t\t\tthis.blurTarget.setSize(w,h);\n\t\t\tthis.resolution.value.set(w, h, 1/w, 1/h);\n\t\t},\n\n\t\ttock: function () {\n\t\t\tif (!this.system.isActive(this, true)) return;\n\t\t\tthis.system.renderPass(this.currentMaterial, this.renderTarget);\n\t\t\tthis.system.tDiffuse.value = this.renderTarget;\n\t\t\tif (!this.data.smooth) return;\n\t\t\tthis.blurDirection.value.set(1,0);\n\t\t\tthis.system.renderPass(this.blurMaterial, this.blurTarget);\n\t\t\tthis.system.tDiffuse.value = this.blurTarget;\n\t\t\tthis.blurDirection.value.set(0,1);\n\t\t\tthis.system.renderPass(this.blurMaterial, this.renderTarget);\n\t\t},\n\n\t    remove: function () {\n\t        this.system.unregister(this);\n\t    },\n\n\t    diffuse: true,\n\n\t    sobel: [\n\t\t\t\"mat3 $G[2];\",\n\n\t\t\t\"const mat3 $g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\",\n\t\t\t\"const mat3 $g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\",\n\n\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\n\t\t\t\t\"vec3 I[3];\",\n\t\t\t\t\"float cnv[2];\",\n\t\t\t\t\"float d;\",\n\n\t\t\t\t\"$G[0] = $g0;\",\n\t\t\t\t\"$G[1] = $g1;\",\n\n\t\t\t\t\"for (float i=0.0; i<3.0; i++)\",\n\t\t\t\t\"for (float j=0.0; j<3.0; j++) {\",\n\t\t\t\"           d = texture2D(tDepth, uv + resolution.zw * vec2(i-1.0,j-1.0) ).x;\",\n\t        \"           d = perspectiveDepthToViewZ(d, cameraNear, cameraFar); \",\n\t\t\t\"\t\t\tI[int(i)][int(j)] = viewZToOrthographicDepth(d, cameraNear, cameraFar);\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"for (int i=0; i<2; i++) {\",\n\t\t\t\t\t\"float dp3 = dot($G[i][0], I[0]) + dot($G[i][1], I[1]) + dot($G[i][2], I[2]);\",\n\t\t\t\t\t\"cnv[i] = dp3 * dp3; \",\n\t\t\t\t\"}\",\n\t\t\t\t\"color = vec4($color, sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));\",\n\t\t\t\"} \"\n\t\t].join(\"\\n\"),\n\n\t\tblur: [\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){\",\n\t\t\t\"color.a *= 0.44198;\",\n\t\t\t\"color.a += texture2D(tDiffuse, uv + ($direction * $resolution.zw )).a * 0.27901;\",\n\t\t\t\"color.a += texture2D(tDiffuse, uv - ($direction * $resolution.zw )).a * 0.27901;\",\n\t\t\t\"}\"\n\t\t].join(\"\\n\"),\n\n\t\tfragment: [\n\t        \"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){\",\n\t        \"\tvec4 texel = texture2D($texture, uv);\",\n\t\t\t\"   color.rgb = mix(color.rgb, texel.rgb, smoothstep(0.1,0.3,texel.a));\",\n\t        \"}\"\n\t    ].join(\"\\n\")\n\t});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t// Ported from the standard shader in Three.js examples\n\n\tAFRAME.registerComponent(\"film\", {\n\t    multiple: true,\n\n\t    schema: {\n\t        \"speed\":       { default: 1.0 },\n\t        \"nIntensity\": { default: 0.5 },\n\t        \"sIntensity\": { default: 0.05 },\n\t        \"sCount\":     { default: 4096 }\n\t\t},\n\n\t    init: function () {\n\t        this.uniforms = {\n\t            \"speed\":       { type: \"f\", value: 0.0 },\n\t            \"nIntensity\": { type: \"f\", value: 0.5 },\n\t            \"sIntensity\": { type: \"f\", value: 0.05 },\n\t            \"sCount\":     { type: \"f\", value: 4096 }\n\t\t    };\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        this.system.register(this);\n\t    },\n\n\t    update: function () {\n\t        var d = this.data, us =  this.uniforms;\n\t        for(var u in us) {\n\t            if(d[u]) us[u].value = d[u]; \n\t        }\n\t    },\n\n\t    remove: function () {\n\t        this.system.unregister(this);\n\t    },\n\n\t    includes: [\"common\"],\n\n\t    diffuse: true,\n\n\t    fragment: [\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\"   vec4 cTextureScreen = color;\",\n\t\t\t\"   float dx = rand( uv + mod(time, 3.14) * $speed );\",\n\t\t\t\"   vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\",\n\t\t\t\"   vec2 sc = vec2( sin( uv.y * $sCount ), cos( uv.y * $sCount ) );\",\n\t\t\t\"   cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * $sIntensity;\",\n\t        \"   cResult = cTextureScreen.rgb + clamp( $nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\t\t\t\"   color.rgb =  cResult; //cResult;\",\n\t\t\t\"}\"\n\t\t].join( \"\\n\" )\n\t});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Uses matdesl's three-fxaa-shader\n\n\tvar FXAAShader = __webpack_require__(7);\n\n\tAFRAME.registerComponent(\"fxaa\", {\n\t    schema: { default: true },\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        this.material = new THREE.ShaderMaterial({\n\t            fragmentShader: FXAAShader.fragmentShader,\n\t            vertexShader: FXAAShader.vertexShader,\n\t            uniforms: {\n\t                tDiffuse: this.system.tDiffuse,\n\t                resolution: { type: 'v2', value: new THREE.Vector2() }\n\t            }\n\t        });\n\t        this.system.register(this);\n\t        this.needsResize = true;\n\t    },\n\n\t    update: function () {\n\t        this.bypass = !this.data;\n\t    },\n\n\t    setSize: function (w, h) {\n\t        this.material.uniforms.resolution.value.set(w, h);\n\t    },\n\n\t    resize: true,\n\n\t    remove: function () {\n\t        this.material.dispose();\n\t        this.system.unregister(this);\n\t    }\n\t});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t\n\t// Adapted from https://github.com/mattdesl/three-shader-fxaa\n\tmodule.exports =  {\n\t  uniforms: {\n\t    tDiffuse: { type: 't', value: null },\n\t    resolution: { type: 'v2', value: new THREE.Vector2() }\n\t  },\n\t  vertexShader: \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix *\\n              modelViewMatrix *\\n              vec4(position,1.0);\\n}\\n\",\n\t  fragmentShader: \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n//make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;   \\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}\\n\"\n\t}\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Adapted from spidersharma UnrealBloomPass\n\tvar LuminosityHighPassShader = __webpack_require__(9);\n\n\tvar BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\n\tvar BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\n\n\tAFRAME.registerComponent(\"bloom\", {\n\t\tmultiple: true,\n\n\t    schema: {\n\t\t\tenable: { default: true},\n\t        strength: { default: 1 },\n\t        radius: { default: 0.4 },\n\t        threshold: { default: 0.8 },\n\t\t\tfilter: { type: \"array\", default: [] }\n\t    },\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        var pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\t        this.renderTargetsHorizontal = [];\n\t        this.renderTargetsVertical = [];\n\t        this.nMips = 5;\n\t        \n\t        this.renderTargetBright = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t        this.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\t        this.renderTargetBright.texture.generateMipmaps = false;\n\n\t        for( var i=0; i<this.nMips; i++) {\n\n\t            var renderTarget = new THREE.WebGLRenderTarget( 1, 1, pars );\n\n\t            renderTarget.texture.name = \"UnrealBloomPass.h\" + i;\n\t            renderTarget.texture.generateMipmaps = false;\n\n\t            this.renderTargetsHorizontal.push(renderTarget);\n\n\t            var renderTarget = new THREE.WebGLRenderTarget( 1, 1, pars );\n\n\t            renderTarget.texture.name = \"UnrealBloomPass.v\" + i;\n\t            renderTarget.texture.generateMipmaps = false;\n\n\t            this.renderTargetsVertical.push(renderTarget);\n\n\t        }\n\n\t        // luminosity high pass material, accessable as bloom.filter\n\n\t\t\tthis.exports = {\n\t\t\t\t\"filter\": {\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\t\"luminosityThreshold\": { type: \"f\", value: 1.0 },\n\t\t\t\t\t\t\"smoothWidth\": { type: \"f\", value: 0.01 },\n\t\t\t\t\t\t\"defaultColor\": { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\t\t\"defaultOpacity\":  { type: \"f\", value: 1.0 }\n\t\t\t\t\t},\n\t\t\t\t\tdiffuse: true,\n\t\t\t\t\tfragment: [\n\t\t\t\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\t\t\t\t\"vec4 texel = color;\",\n\t\t\t\t\t\t\t\"float v = dot( texel.xyz, vec3( 0.299, 0.587, 0.114 ) );\",\n\t\t\t\t\t\t\t\"vec4 outputColor = vec4( $defaultColor.rgb, $defaultOpacity );\",\n\t\t\t\t\t\t\t\"float alpha = smoothstep( $luminosityThreshold, $luminosityThreshold + $smoothWidth, v );\",\n\t\t\t\t\t\t\t\"color = mix( outputColor, texel, alpha );\",\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t].join(\"\\n\")\n\t\t\t\t}\n\t\t\t}\n\n\t        this.materialHighPassFilter = null;\n\t        // Gaussian Blur Materials\n\t        this.separableBlurMaterials = [];\n\t        var kernelSizeArray = [3, 5, 7, 9, 11];\n\t        \n\t        for( var i=0; i<this.nMips; i++) {\n\n\t            this.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));\n\n\t            this.separableBlurMaterials[i].uniforms[ \"texSize\" ].value = new THREE.Vector2(1, 1);\n\n\t        }\n\n\t        // Composite material\n\t        this.compositeMaterial = this.getCompositeMaterial(this.nMips);\n\t        this.compositeMaterial.uniforms[\"blurTexture1\"].value = this.renderTargetsVertical[0].texture;\n\t        this.compositeMaterial.uniforms[\"blurTexture2\"].value = this.renderTargetsVertical[1].texture;\n\t        this.compositeMaterial.uniforms[\"blurTexture3\"].value = this.renderTargetsVertical[2].texture;\n\t        this.compositeMaterial.uniforms[\"blurTexture4\"].value = this.renderTargetsVertical[3].texture;\n\t        this.compositeMaterial.uniforms[\"blurTexture5\"].value = this.renderTargetsVertical[4].texture;\n\t        this.compositeMaterial.needsUpdate = true;\n\n\t        var bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2];\n\t        this.compositeMaterial.uniforms[\"bloomFactors\"].value = bloomFactors;\n\t        this.bloomTintColors = [new THREE.Vector3(1,1,1), new THREE.Vector3(1,1,1), new THREE.Vector3(1,1,1)\n\t                                                    ,new THREE.Vector3(1,1,1), new THREE.Vector3(1,1,1)];\n\t        this.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\t\t\tthis.oldClearColor = new THREE.Color();\n\t        this.uniforms = {\n\t            \"texture\": { type: \"t\", value: this.renderTargetsHorizontal[0] }\n\t        }\n\t        this.needsResize = true;\n\t        this.system.register(this);\n\t    },\n\n\t\tupdate: function (oldData) {\n\t\t\tif (oldData.filter !== this.data.filter) {\n\t\t\t\tif (this.materialHighPassFilter) this.materialHighPassFilter.dispose();\n\t\t\t\tvar chain = this.data.filter.length ? this.data.filter : [this.exports.filter];\n\t\t\t\tthis.materialHighPassFilter = this.system.fuse(chain, false);\n\t\t\t}\n\t\t},\n\n\t    tock: function (time) {\n\t        if (!this.data.enable || !this.system.isActive(this, true)) return;\n\t\t\tvar scene = this.el.sceneEl;\n\t\t\tvar renderer = scene.renderer;\n\t        var readBuffer = scene.renderTarget;\n\t        this.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\t\tvar oldAutoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\trenderer.setClearColor( new THREE.Color( 0, 0, 0 ), 0 );\n\n\t\t\t// 1. Extract Bright Areas\n\t\t\tthis.system.tDiffuse.value = readBuffer.texture;\n\t\t\tthis.exports.filter.uniforms[ \"luminosityThreshold\" ].value = this.data.threshold;\n\t\t\tthis.system.renderPass(this.materialHighPassFilter, this.renderTargetBright, null, false);\n\n\t\t\t// 2. Blur All the mips progressively\n\t\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\t\tfor(var i=0; i<this.nMips; i++) {\n\t\t\n\t\t\t\tthis.separableBlurMaterials[i].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\n\t\t\t\tthis.separableBlurMaterials[i].uniforms[ \"direction\" ].value = BlurDirectionX;\n\n\t            this.system.renderPass(this.separableBlurMaterials[i], this.renderTargetsHorizontal[i], true);\n\n\t\t\t\tthis.separableBlurMaterials[i].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[i].texture;\n\n\t\t\t\tthis.separableBlurMaterials[i].uniforms[ \"direction\" ].value = BlurDirectionY;\n\n\t\t\t\tthis.system.renderPass(this.separableBlurMaterials[i], this.renderTargetsVertical[i], true);\n\n\t\t\t\tinputRenderTarget = this.renderTargetsVertical[i];\n\t\t\t}\n\n\t\t\t// Composite All the mips\n\t\t\tthis.compositeMaterial.uniforms[\"bloomStrength\"].value = this.data.strength;\n\t\t\tthis.compositeMaterial.uniforms[\"bloomRadius\"].value = this.data.radius;\n\t\t\tthis.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\t        this.system.renderPass(this.compositeMaterial, this.renderTargetsHorizontal[0], null);\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\t\trenderer.autoClear = oldAutoClear;\n\t\t},\n\n\t    setSize: function ( width, height ) {\n\n\t\t\tvar resx = Math.round(width/2);\n\t\t\tvar resy = Math.round(height/2);\n\n\t\t\tthis.renderTargetBright.setSize(resx, resy);\n\n\t\t\tfor( var i=0; i<this.nMips; i++) {\n\n\t\t\t\tthis.renderTargetsHorizontal[i].setSize(resx, resy);\n\t\t\t\tthis.renderTargetsVertical[i].setSize(resx, resy);\n\n\t\t\t\tthis.separableBlurMaterials[i].uniforms[ \"texSize\" ].value = new THREE.Vector2(resx, resy);\n\n\t\t\t\tresx = Math.round(resx/2);\n\t\t\t\tresy = Math.round(resy/2);\n\t\t\t}\n\t\t},\n\n\t    remove: function () {\n\t        this.system.unregister(this);\n\t        for( var i=0; i< this.renderTargetsHorizontal.length; i++) {\n\t\t\t\tthis.renderTargetsHorizontal[i].dispose();\n\t\t\t}\n\t\t\tfor( var i=0; i< this.renderTargetsVertical.length; i++) {\n\t\t\t\tthis.renderTargetsVertical[i].dispose();\n\t\t\t}\n\t\t\tthis.renderTargetBright.dispose();\n\t    },\n\n\t    getSeperableBlurMaterial: function(kernelRadius) {\n\n\t\t\treturn this.system.materialize( {\n\n\t\t\t\tdefines: {\n\t\t\t\t\t\"KERNEL_RADIUS\" : kernelRadius,\n\t\t\t\t\t\"SIGMA\" : kernelRadius\n\t\t\t\t},\n\n\t\t\t\tuniforms: {\n\t\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\t\"texSize\": \t\t\t\t{ value: new THREE.Vector2( 0.5, 0.5 ) },\n\t\t\t\t\t\"direction\": \t\t\t\t{ value: new THREE.Vector2( 0.5, 0.5 ) }\n\t\t\t\t},\n\n\t\t\t\tvertexShader:\n\t\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t\t}\",\n\n\t\t\t\tfragmentShader:\n\t\t\t\t\t\"#include <common>\\\n\t\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\t\tvec3 sample1 = textureVR( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\t\tvec3 sample2 = textureVR( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t\t}\\\n\t\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t\t}\"\n\t\t\t} );\n\t\t},\n\n\t\tgetCompositeMaterial: function(nMips) {\n\n\t\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\t\tdefines:{\n\t\t\t\t\t\"NUM_MIPS\" : nMips\n\t\t\t\t},\n\n\t\t\t\tuniforms: {\n\t\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\t\"bloomStrength\" : { value: 1.0 },\n\t\t\t\t\t\"bloomFactors\" : { value: null },\n\t\t\t\t\t\"bloomTintColors\" : { value: null },\n\t\t\t\t\t\"bloomRadius\" : { value: 0.0 }\n\t\t\t\t},\n\n\t\t\t\tvertexShader:\n\t\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t\t}\",\n\n\t\t\t\tfragmentShader:\n\t\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\t\\\n\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t\t}\\\n\t\t\t\t\t\\\n\t\t\t\t\tvoid main() {\\\n\t\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t \t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t\t}\"\n\t\t\t} );\n\t\t},\n\n\t\tdiffuse: true,\n\t\tdefaults: [\"1.0\"],\n\t    fragment: [\n\t        \"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){\",\n\t        \"   color.rgb += texture2D($texture, uv).rgb;\",\n\t        \"}\"\n\t    ].join(\"\\n\")\n\t});\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t *\n\t * Luminosity\n\t * http://en.wikipedia.org/wiki/Luminosity\n\t */\n\n\tmodule.exports = {\n\n\t  shaderID: \"luminosityHighPass\",\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"luminosityThreshold\": { type: \"f\", value: 1.0 },\n\t\t\t\"smoothWidth\": { type: \"f\", value: 1.0 },\n\t\t\t\"defaultColor\": { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\"defaultOpacity\":  { type: \"f\", value: 0.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec3 defaultColor;\",\n\t\t\t\"uniform float defaultOpacity;\",\n\t\t\t\"uniform float luminosityThreshold;\",\n\t\t\t\"uniform float smoothWidth;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tAFRAME.registerComponent(\"colors\", {\n\t    multiple: true,\n\n\t    schema: {\n\t        \"mode\": { default: \"map\" },\n\t        \"lut\": { type: \"selector\"},\n\t        \"lutClamp\": { default: false },\n\t        \"lutFlip\": { default: false },\n\t        \"add\": { type: \"vec3\", default: new THREE.Vector3(0,0,0) },\n\t        \"mul\": { type: \"vec3\", default: new THREE.Vector3(1,1,1) },\n\t        \"pow\": { type: \"vec3\", default: new THREE.Vector3(1,1,1) },\n\t        \"left\": { type: \"vec3\", default: new THREE.Vector3(0,0,0) },\n\t        \"right\": { type: \"vec3\", default: new THREE.Vector3(1,1,1) },\n\t        \"min\": { type: \"vec3\", default: new THREE.Vector3(0,0,0) },\n\t        \"max\": { type: \"vec3\", default: new THREE.Vector3(1,1,1) },\n\t        \"quant\": { type: \"vec3\", default: new THREE.Vector3(0.2,0.2,0.2) },\n\t        \"orig\": { type: \"vec3\", default: new THREE.Vector3(1,1,1) },\n\t        \"red\": { type: \"vec3\", default: new THREE.Vector3(1,0,0) },\n\t        \"green\": { type: \"vec3\", default: new THREE.Vector3(0,0.5,0.5) },\n\t        \"blue\": { type: \"vec3\", default: new THREE.Vector3(0,0.5,0.5) },\n\t    },\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        this.uniforms = {\n\t            \"add\": { type: \"v3\", value: null },\n\t            \"mul\": { type: \"v3\", value: null },\n\t            \"pow\": { type: \"v3\", value: null },\n\t            \"left\": { type: \"v3\", value: null },\n\t            \"right\": { type: \"v3\", value: null },\n\t            \"min\": { type: \"v3\", value: null },\n\t            \"max\": { type: \"v3\", value: null },\n\t            \"quant\": { type: \"v3\", value: null },\n\t            \"orig\": { type: \"v3\", value: null },\n\t            \"red\": { type: \"v3\", value: null },\n\t            \"green\": { type: \"v3\", value: null },\n\t            \"blue\": { type: \"v3\", value: null },\n\t            \"texture\": { \n\t                type: \"t\", \n\t                value: new THREE.Texture(\n\t                    undefined, // Default Image\n\t                    undefined, // Default Mapping\n\t                    undefined, // Default wrapS\n\t                    undefined, // Default wrapT\n\t                    THREE.NearestFilter, // magFilter\n\t                    THREE.NearestFilter  // minFilter\n\t                )}\n\t        }\n\t        \n\t        this.rebuild();\n\t    \n\t        this.system.register(this);\n\t    },\n\n\t    update: function (oldData) {\n\t        var d = this.data, us =  this.uniforms, needsRebuild = false;\n\t        \n\t        for(var u in us) {\n\t            if(d[u] !== undefined) us[u].value = d[u]; \n\t        }\n\t        []\n\t        if(this.data.lutFlip !== oldData.lutFlip || this.data.lutClamp !== oldData.lutClamp || this.data.mode != oldData.mode) {\n\t            this.rebuild();\n\t        }\n\n\t        if(this.data.lut !== oldData.lut) {\n\t            const texture = this.uniforms.texture.value;\n\t            texture.image = this.data.lut;\n\t            texture.needsUpdate = true;\n\t        }\n\t    },\n\n\t    remove: function () {\n\t        this.system.unregister(this);\n\t    },\n\n\t    rebuild: function () {\n\t        var arr = [], m = this.data.mode;\n\t        for(var i=0; i < m.length; i++){\n\t            var op = this.ops[m[i]];\n\t            if(op) arr.push(op);\n\t        }\n\t        \n\t        this.fragment = [\n\t            this.data.lutClamp ? \"\" : \"#define $LUT_NO_CLAMP 1\",\n\t            this.data.lutFlip ? \"#define $LUT_FLIP_Y 1\" : \"\",\n\t            this.preFragment, \n\t            arr.join(\"\\n\"), \n\t            \"}\"\n\t        ].join(\"\\n\");\n\n\t        this.system.needsUpdate = true;\n\t    },\n\n\t    ops: {\n\t        \"m\": \"color.rgb *= $mul;\",\n\t        \"a\": \"color.rgb += $add;\",\n\t        \"p\": \"color.rgb = pow(color.rgb, $pow);\",\n\t        \"h\": \"color.rgb = $rgb2hsv(color.rgb);\",\n\t        \"r\": \"color.rgb = $hsv2rgb(color.rgb);\",\n\t        \"s\": \"color.rgb = smoothstep($left, $right, color.rgb);\",\n\t        \"l\": \"color.rgb = $lut(color).rgb;\",\n\t        \"q\": \"color.rgb = floor(color.rgb / $quant) * $quant;\",\n\t        \"c\": \"color.rgb = clamp(color.rgb, $min, $max);\",\n\t        \"g\": \"color.rgb = vec3(dot(color.rgb, vec3(0.299, 0.587, 0.114)));\",\n\t        \"o\": \"color.rgb = mix(color.rgb, orig.rgb, $orig);\",\n\t        \"t\": \"color.rgb = vec3(dot(color.rgb, $red), dot(color.rgb, $green), dot(color.rgb, $blue));\",\n\t        \"b\": \"color.rgb = color.rgb;\"\n\t    },\n\n\t    diffuse: true,\n\n\t    preFragment: [\n\t        // Lut from https://github.com/mattdesl/glsl-lut\n\t        \"vec4 $lut(vec4 textureColor) {\",\n\t        \"    #ifndef $LUT_NO_CLAMP\",\n\t        \"        textureColor = clamp(textureColor, 0.0, 1.0);\",\n\t        \"    #endif\",\n\n\t        \"    mediump float blueColor = textureColor.b * 63.0;\",\n\n\t        \"    mediump vec2 quad1;\",\n\t        \"    quad1.y = floor(floor(blueColor) / 8.0);\",\n\t        \"    quad1.x = floor(blueColor) - (quad1.y * 8.0);\",\n\n\t        \"    mediump vec2 quad2;\",\n\t        \"    quad2.y = floor(ceil(blueColor) / 8.0);\",\n\t        \"    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\",\n\n\t        \"    highp vec2 texPos1;\",\n\t        \"    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\",\n\t        \"    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\",\n\n\t        \"    #ifdef $LUT_FLIP_Y\",\n\t        \"        texPos1.y = 1.0-texPos1.y;\",\n\t        \"    #endif\",\n\n\t        \"    highp vec2 texPos2;\",\n\t        \"    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\",\n\t        \"    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\",\n\n\t        \"    #ifdef $LUT_FLIP_Y\",\n\t        \"        texPos2.y = 1.0-texPos2.y;\",\n\t        \"    #endif\",\n\n\t        \"    lowp vec4 newColor1 = texture2D($texture, texPos1);\",\n\t        \"    lowp vec4 newColor2 = texture2D($texture, texPos2);\",\n\n\t        \"    lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\",\n\t        \"    return newColor;\",\n\t        \"}\",\n\n\t        \"vec3 $rgb2hsv(vec3 c){\",\n\t        \n\t        \"    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\",\n\t        \"    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\",\n\t        \"    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\",\n\n\t        \"    float d = q.x - min(q.w, q.y);\",\n\t        \"    float e = 1.0e-10;\",\n\t        \"    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\",\n\t        \"}\",\n\n\t        \"vec3 $hsv2rgb(vec3 c)\",\n\t        \"{\",\n\t        \"    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\",\n\t        \"    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\",\n\t        \"    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\",\n\t        \"}\",\n\n\t        \"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){\",\n\t        \"vec3 orig = color.rgb;\",\n\t    ].join(\"\\n\")\n\t});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t// Ported from three's glitch pass/shader and added VR support\n\n\tAFRAME.registerComponent(\"glitch\", {\n\t    schema: { default: true },\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\n\t        this.uniforms = {\n\t            \"tDisp\":\t\t{ type: \"t\", value: this.generateHeightmap( 64 ) },\n\t            \"amount\":\t\t{ type: \"f\", value: 0.08 },\n\t            \"angle\":\t\t{ type: \"f\", value: 0.02 },\n\t            \"seed\":\t\t\t{ type: \"f\", value: 0.02 },\n\t            \"seed_x\":\t\t{ type: \"f\", value: 0.02 },//-1,1\n\t            \"seed_y\":\t\t{ type: \"f\", value: 0.02 },//-1,1\n\t            \"distortion_x\":\t{ type: \"f\", value: 0.5 },\n\t            \"distortion_y\":\t{ type: \"f\", value: 0.6 },\n\t            \"col_s\":\t\t{ type: \"f\", value: 0.05 }\n\t\t    };\n\t        \n\t\t\tthis.exports = {\n\t\t\t\tglitch: {\n\t                fragment: this.fragment,\n\t                uniforms: this.uniforms\n\t            }\n\t\t\t}\n\t        // by declaring a .material property we set this component to take a whole pass of it's own\n\t        this.material = this.system.fuse([this.exports.glitch]);\n\n\t        this.system.register(this);\n\t    },\n\n\t    vr: true,\n\n\t    update: function () {\n\t        this.bypass = !this.data;\n\t        this.curF = 0;\n\t        this.generateTrigger();\n\t    },\n\n\t    remove: function () {\n\t        this.system.unregister(this);\n\t    },\n\n\t    tock: function () {\n\t        this.uniforms[ 'seed' ].value = Math.random();//default seeding\n\t\t\t\n\t\t\tif ( this.curF % this.randX == 0) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.curF = 0;\n\t\t\t\tthis.generateTrigger();\n\n\t\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\n\t\t\t} \n\n\t\t\tthis.curF ++;\n\t    },\n\n\t    generateTrigger: function() {\n\n\t\t\tthis.randX = THREE.Math.randInt( 120, 240 );\n\n\t\t},\n\n\t\tgenerateHeightmap: function( dt_size ) {\n\n\t\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\n\t\t\tvar length = dt_size * dt_size;\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar val = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tdata_arr[ i * 3 + 0 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 1 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 2 ] = val;\n\n\t\t\t}\n\n\t\t\tvar texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t\t\ttexture.needsUpdate = true;\n\t\t\treturn texture;\n\n\t\t},\n\n\t    fragment: [\n\t\t\t\"float $rand(vec2 co){\",\n\t\t\t\t\"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t\t\t\"}\",\n\t\t\t\t\t\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\t\t\"vec2 p = uv;\",\n\t                \"vec2 p2 = vec2( smoothstep(uvClamp.x, uvClamp.y, p.x),p.y);\",\n\t\t\t\t\t\"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t\t\t\t\t\"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t\t\t\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t\t\t\t\t\"vec4 normal = texture2D ($tDisp, p2 * $seed * $seed);\",\n\t\t\t\t\t\"if(p2.y < $distortion_x + $col_s && p2.y > $distortion_x - $col_s * $seed) {\",\n\t\t\t\t\t\t\"if($seed_x>0.){\",\n\t\t\t\t\t\t\t\"p.y = 1. - (p.y + $distortion_y);\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\t\t\"p.y = $distortion_y;\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"if(p2.x < $distortion_y + $col_s && p2.x > $distortion_y - $col_s * $seed) {\",\n\t\t\t\t\t\t\"if( $seed_y > 0.){\",\n\t\t\t\t\t\t\t\"p.x = $distortion_x;\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\t\t\"p.x = 1. - (p.x + $distortion_x);\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"p.x+=normal.x* $seed_x * ($seed/5.);\",\n\t\t\t\t\t\"p.y+=normal.y* $seed_y * ($seed/5.);\",\n\t\t\t\t\t//base from RGB shift shader\n\t\t\t\t\t\"vec2 offset = $amount * vec2( cos($angle), sin($angle));\",\n\t\t\t\t\t\"vec4 cr = textureVR(tDiffuse, p + offset);\",\n\t\t\t\t\t\"vec4 cga = textureVR(tDiffuse, p);\",\n\t\t\t\t\t\"vec4 cb = textureVR(tDiffuse, p - offset);\",\n\t\t\t\t\t\"color = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t\t\t\t\t//add noise\n\t\t\t\t\t\"vec4 snow = 200.*$amount*vec4($rand(vec2(xs * $seed,ys * $seed*50.))*0.2);\",\n\t\t\t\t\t\"color = color+ snow;\",\n\t\t\t\"}\"\n\t\t].join( \"\\n\" )\n\t});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t// Ported from the shader in Three.js examples\n\t// with the addition of a separate input pass\n\n\tAFRAME.registerComponent(\"godrays\", {\n\t    schema: {\n\t        \"tint\": { type: \"color\", default: \"#FFFFFF\" },\n\t        \"threshold\": { type: \"vec4\", default: new THREE.Vector4(0,1,1) },\n\t        \"src\": { type: \"selector\", default: null },\n\t        \"intensity\": { default: 1 },\n\t        \"filter\": { type: \"array\", default: [] },\n\t        \"ratio\": { default: 0.25 }\n\t\t},\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        var pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\t\t\tthis.rtFilter = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t        this.rtTextureGodRays1 = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t\t\tthis.rtTextureGodRays2 = new THREE.WebGLRenderTarget( 1, 1, pars );\n\t        \n\t        this.exports = {\n\t            filter: {\n\t                includes: [\"packing\"],\n\t                uniforms: {\n\t                    \"tint\": { type: \"c\", value: new THREE.Color() },\n\t                    \"threshold\": { type: \"v2\", value: new THREE.Vector2(0,1) },\n\t                },\n\t                depth: true, \n\t                fragment: [\n\t                    \"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t                    \"   float v = viewZToOrthographicDepth(perspectiveDepthToViewZ(depth, cameraNear, cameraFar), cameraNear, cameraFar);\",\n\t                    \"   color.rgb = vec3(smoothstep($threshold.x, $threshold.y, v)) * $tint;\",\n\t                    \"}\"\n\t                ].join( \"\\n\" ),\n\t            },\n\t            blur: {\n\t                uniforms: {\n\t                    step: { type:\"f\", value: 1.0 },\n\t                    src: { type: \"v3\", value: new THREE.Vector3( 0.5, 0.5, 0. ) }\n\t                },\n\t                fragment: [\n\t                    \"void $main(inout vec4 color, vec4 orig, vec2 uv, float depth) {\",\n\t                        \"vec2 center = vec2(mix(uvClamp.x, uvClamp.y, $src.x), $src.y);\",\n\t                        \"vec2 delta = center - uv;\",\n\t                        \"float dist = length( delta );\",\n\t                        \"vec2 stepv = $step * delta / dist;\",\n\t                        \"float iters = dist/$step;\",\n\t                        \"vec4 col = vec4(0.0);\",\n\t                        \"if ( 0.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"uv += stepv;\",\n\t                        \"if ( 1.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"uv += stepv;\",\n\t                        \"if ( 2.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"uv += stepv;\",\n\t                        \"if ( 3.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"uv += stepv;\",\n\t                        \"if ( 4.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"uv += stepv;\",\n\t                        \"if ( 5.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );\",\n\t                        \"color = col/6.0;\",\n\t                    \"}\"\n\n\t                ].join( \"\\n\" )\n\t            }\n\t        }\n\t        \n\t        this.materialGodraysGenerate = this.system.fuse([this.exports.blur]);\n\t        this.uniforms = {\n\t            \"intensity\": { type: \"f\", value: 1 },\n\t            \"attenuation\": {type: \"f\", value: 1 },\n\t            \"texture\": { type: \"t\", value: this.rtTextureGodRays2 }\n\t\t    };\n\n\t        this.materialFilter = null;\n\t        \n\t        this.needsResize = true;\n\t        this.system.register(this);\n\t    },\n\n\t    setSize: function (w,h) {\n\t       w = Math.round(w * this.data.ratio);\n\t       h = Math.round(h * this.data.ratio);\n\t       this.rtTextureGodRays1.setSize(w,h);\n\t       this.rtTextureGodRays2.setSize(w,h);\n\t       this.rtFilter.setSize(w,h);\n\t    },\n\n\t    update: function (oldData) {\n\t        this.exports.filter.uniforms.tint.value.set(this.data.tint);\n\t        this.uniforms.intensity.value = this.data.intensity;\n\t        if(this.data.filter !== oldData.filter) {\n\t            if(this.materialFilter) this.materialFilter.dispose();\n\t            this.materialFilter = this.system.fuse(this.data.filter.length ? this.data.filter : [this.exports.filter]);\n\t        }\n\t        this.bypass = this.data.src === null;\n\t    },\n\n\t    tock: function () {\n\t        if (!this.system.isActive(this, true)) return;\n\t        var self = this;\n\t        \n\t        this.system.tDiffuse.value = this.system.renderTarget.texture;\n\t        this.system.renderPass(this.materialFilter, this.rtFilter, fn )\n\n\t        var fn = function (material, camera, eye) {\n\t            var cp3 = new THREE.Vector3(), cd3 = new THREE.Vector3();\n\t            var v3 = self.exports.blur.uniforms[ \"src\" ].value;\n\t            self.data.src.object3D.getWorldPosition(v3);\n\t            camera.getWorldPosition(cp3);\n\t            camera.getWorldDirection(cd3);\n\t            cp3.sub(v3);\n\t            cp3.normalize();\n\t            cd3.normalize();\n\t            self.uniforms.attenuation.value = Math.pow(Math.max(0, -cd3.dot(cp3)), 1.33);\n\t            \n\t            v3.project( camera );\n\t            v3.set((v3.x + 1 ) / 2, (v3.y + 1 ) / 2, 0);\n\t            \n\t        };\n\n\t        var filterLen = 1.0;\n\t\t\tvar TAPS_PER_PASS = 6.0;\n\t        \n\t        var pass = 1.0;\n\t        var stepLen = filterLen * Math.pow( TAPS_PER_PASS, -pass );\n\t        this.exports.blur.uniforms[ \"step\" ].value = stepLen;\n\t        this.system[ \"tDiffuse\" ].value = this.rtFilter.texture;\n\t        this.system.renderPass(this.materialGodraysGenerate, this.rtTextureGodRays2, fn )\n\t        \n\t        pass = 2.0;\n\t        stepLen = filterLen * Math.pow( TAPS_PER_PASS, -pass );\n\t        this.exports.blur.uniforms[ \"step\" ].value = stepLen;\n\t        this.system[ \"tDiffuse\" ].value = this.rtTextureGodRays2.texture;\n\t        this.system.renderPass(this.materialGodraysGenerate, this.rtTextureGodRays1, fn );\n\t        \n\t        pass = 3.0;\n\t        stepLen = filterLen * Math.pow( TAPS_PER_PASS, -pass );\n\t        this.exports.blur.uniforms[ \"step\" ].value = stepLen;\n\t        this.system[ \"tDiffuse\" ].value = this.rtTextureGodRays1.texture;\n\t        this.system.renderPass(this.materialGodraysGenerate, this.rtTextureGodRays2, fn )\n\t    },\n\n\t    remove: function () {\n\t        this.rtTextureGodRays1.dispose();\n\t        this.rtTextureGodRays2.dispose();\n\t        this.rtFilter.dispose();\n\n\t        this.materialGodraysGenerate.dispose();\n\t        this.materialFilter.dispose();\n\t        this.system.unregister(this);\n\t    },\n\n\t    diffuse: true,\n\n\t    fragment: [\n\t        \"float $blendScreen(float base, float blend) {\",\n\t        \"    return 1.0-((1.0-base)*(1.0-blend));\",\n\t        \"}\",\n\n\t        \"vec3 $blendScreen(vec3 base, vec3 blend) {\",\n\t        \"    return vec3($blendScreen(base.r,blend.r),$blendScreen(base.g,blend.g),$blendScreen(base.b,blend.b));\",\n\t        \"}\",\n\n\t        \"vec3 $blendScreen(vec3 base, vec3 blend, float opacity) {\",\n\t\t    \"    return ($blendScreen(base, blend) * opacity + base * (1.0 - opacity));\",\n\t        \"}\",\n\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\"   vec4 texel = texture2D($texture, uv);\",\n\t        \"   color.rgb = $blendScreen( color.rgb, texel.rgb, $intensity * $attenuation);\",\n\t        \"}\"\n\t\t].join( \"\\n\" )\n\t});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SAOShader = __webpack_require__(14);\n\tvar DepthLimitedBlurShader = __webpack_require__(15);\n\n\tAFRAME.registerComponent(\"ssao\", {\n\t    schema: {\n\t        \"samples\": { type: \"number\", default: 16},\n\t        \"rings\": { type: \"number\", default: 7 },\n\t        \"radius\": { type: \"number\", default: 0.5 },\n\t        \"ratio\": { default: 0.5 },\n\t        \"intensity\": { default: 1.0 },\n\t        \"maxDepth\": { default: 0.99 },\n\t        \"bias\": { default: 0.05 },\n\t        \"scale\": { default: 0.15 },\n\t        \"blurRadius\": { default: 7 },\n\t        \"depthCutoff\":  { default: 10 }\n\t\t},\n\n\t    init: function () {\n\t        this.system = this.el.sceneEl.systems.effects;\n\t        var pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\t        this.renderTargets = [];\n\t\t\tthis.renderTargets.push(new THREE.WebGLRenderTarget( 1, 1, pars));\n\t\t\tthis.renderTargets.push(new THREE.WebGLRenderTarget( 1, 1, pars));\t\n\t        this.uniforms = {\n\t            \"texture\": { type: \"t\", value: this.renderTargets[0].texture },\n\t            \"intensity\": { type: \"f\", value: 1.0 },\n\t            \"maxDepth\": { type: \"f\", value: 0.99 },\n\t            \"depthCutoff\": { type: \"f\", default: 1}\n\t\t    };\n\t        this.SAOMaterial = null;\n\t        this.hBlurMaterial = null;\n\t        this.vBlurMaterial = null;\n\t        this.sizeUniform = { type: \"v2\", value: new THREE.Vector2()};\n\t        this.system.register(this);\n\t    },\n\n\t    update: function (od) {\n\t        var d = this.data, self=this;\n\n\t        this.rebuild(d.rings !== od.rings || d.samples !== od.samples, d.blurRadius !== od.blurRadius);\n\t        this.uniforms.depthCutoff.value = d.depthCutoff;\n\t        this.uniforms.intensity.value = d.intensity;\n\t        this.uniforms.maxDepth.value = d.maxDepth;\n\t        this.SAOMaterial.uniforms.bias.value = d.bias;\n\t        this.SAOMaterial.uniforms.scale.value = d.scale;\n\t        this.SAOMaterial.uniforms.kernelRadius.value = d.radius;\n\t        this.hBlurMaterial.uniforms.depthCutoff.value = d.depthCutoff;\n\t        this.vBlurMaterial.uniforms.depthCutoff.value = d.depthCutoff;\n\t    },\n\n\t    rebuild: function (sao, blur) {\n\t        var d = this.data;\n\t        if(sao) {\n\t            if (this.SAOMaterial) {\n\t                this.SAOMaterial.dispose();\n\t            }\n\t            this.SAOMaterial = this.system.materialize(SAOShader(true));\n\t\t\t\tthis.SAOMaterial.defines[\"RINGS\"] = parseInt(d.rings) + \".\";\n\t\t\t\tthis.SAOMaterial.defines[\"SAMPLES\"] = parseInt(d.samples) + \".\";\n\t\t\t\tthis.SAOMaterial.uniforms.cameraFar = this.system.cameraFar;\n\t            this.SAOMaterial.uniforms.cameraNear = this.system.cameraNear;\n\t        }\n\t        if(blur) {\n\t            if (this.hBlurMaterial) {\n\t                this.hBlurMaterial.dispose();\n\t                this.vBlurMaterial.dispose();\n\t            }\n\t            this.hBlurMaterial = this.system.materialize(DepthLimitedBlurShader(d.blurRadius, d.blurRadius/2, new THREE.Vector2(1,0)));\n\t            this.vBlurMaterial = this.system.materialize(DepthLimitedBlurShader(d.blurRadius, d.blurRadius/2, new THREE.Vector2(0,1)));\n\t            this.hBlurMaterial.uniforms.size = this.sizeUniform;\n\t            this.vBlurMaterial.uniforms.size = this.sizeUniform;\n\t            this.hBlurMaterial.uniforms.cameraFar = this.system.cameraFar;\n\t            this.hBlurMaterial.uniforms.cameraNear = this.system.cameraNear;\n\t            this.vBlurMaterial.uniforms.cameraFar = this.system.cameraFar;\n\t            this.vBlurMaterial.uniforms.cameraNear = this.system.cameraNear;\n\t        }\n\t    },\n\n\t    setSize: function(w, h) {\n\t        w = Math.ceil(w * this.data.ratio);\n\t        h = Math.ceil(h * this.data.ratio);\n\t        \n\t        this.sizeUniform.value.set(w,h);\n\n\t        this.renderTargets.forEach(function (rt) {\n\t            rt.setSize(w,h);\n\t        });\n\t    },\n\n\t    tock: function (time) {\n\t        if (!this.system.isActive(this, true)) return;\n\t        //this.SAOMaterial.uniforms.randomSeed.value = Math.random();\n\t        this.SAOMaterial.uniforms[ 'cameraInverseProjectionMatrix' ].value.getInverse( this.el.sceneEl.camera.projectionMatrix );\n\t\t\tthis.SAOMaterial.uniforms[ 'cameraProjectionMatrix' ].value = this.el.sceneEl.camera.projectionMatrix;\n\t    \n\t        this.SAOMaterial.uniforms.tDepth.value = this.el.sceneEl.renderTarget.depthTexture;\n\t        this.system.renderPass(this.SAOMaterial, this.renderTargets[0], true);\n\n\t\t\tif(this.data.blurRadius) {\n\t\t\t\tthis.hBlurMaterial.uniforms.tDiffuse.value = this.renderTargets[0].texture;\n\t\t\t\tthis.system.renderPass(this.hBlurMaterial, this.renderTargets[1], true);\n\n\t\t\t\tthis.vBlurMaterial.uniforms.tDiffuse.value = this.renderTargets[1].texture;\n\t\t\t\tthis.system.renderPass(this.vBlurMaterial, this.renderTargets[0], true);\n\t\t\t}\n\t\t},\n\n\t    remove: function () {\n\t        this.SAOMaterial.dispose();\n\t        this.hBlurMaterial.dispose();\n\t        this.vBlurMaterial.dispose();\n\t        this.renderTargets[0].dispose();\n\t        this.renderTargets[1].dispose();\n\t        this.system.unregister(this);\n\t    },\n\n\t    includes: [\"packing\"],\n\n\t    depth: true,\n\n\t    diffuse: true,\n\t    \n\t    fragment: [\n\t        \"float $unpackDepth(vec3 pack) {\",\n\t        \"\tfloat depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );\",\n\t        \"\treturn depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);\",\n\t        \"}\",\n\t\t\t\"void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {\",\n\t\t\t\"   vec4 texel = texture2D($texture, uv);\",\n\t        \"   float z = perspectiveDepthToViewZ( $unpackDepth(texel.xyz), cameraNear, cameraFar );\",\n\t        \"   float Z = perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\n\t        \"   color.rgb *= abs(z-Z) > $depthCutoff || Z >= $maxDepth * cameraFar ? 1.0  :  1.0 - texel.a * $intensity;\",\n\t        \"}\"\n\t\t].join( \"\\n\" )\n\t});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t *\n\t * Scalable Ambient Occlusion\n\t *\n\t */\n\n\tmodule.exports = function (isFirst) {\n\t\treturn {\n\t\t\tdefines: {},\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"tDepth\":       { type: \"t\", value: null },\n\t\t\t\t\n\t\t\t\t\"cameraNear\":   { type: \"f\", value: 1 },\n\t\t\t\t\"cameraFar\":    { type: \"f\", value: 100 },\n\t\t\t\t\"cameraProjectionMatrix\": { type: \"m4\", value: new THREE.Matrix4() },\n\t\t\t\t\"cameraInverseProjectionMatrix\": { type: \"m4\", value: new THREE.Matrix4() },\n\n\t\t\t\t\"scale\":        { type: \"f\", value: 1.0 },\n\t\t\t\t\"bias\":         { type: \"f\", value: 0.5 },\n\n\t\t\t\t\"minResolution\": { type: \"f\", value: 0.0 },\n\t\t\t\t\"kernelRadius\": { type: \"f\", value: 0.5 },\n\t\t\t\t\"randomSeed\":   { type: \"f\", value: 0.0 },\n\t\t\t\t\"maxDepth\":   { type: \"f\", value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec2 vUv;\",\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t// total number of samples at each fragment\",\n\t\t\t\t\n\t\t\t\t\"#include <common>\",\n\t\t\t\t\"#include <packing>\",\n\n\t\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\t\t\"uniform float cameraNear;\",\n\t\t\t\t\"uniform float cameraFar;\",\n\t\t\t\t\"uniform mat4 cameraProjectionMatrix;\",\n\t\t\t\t\"uniform mat4 cameraInverseProjectionMatrix;\",\n\n\t\t\t\t\"uniform float scale;\",\n\t\t\t\t\"uniform float intensity;\",\n\t\t\t\t\"uniform float bias;\",\n\t\t\t\t\"uniform float kernelRadius;\",\n\t\t\t\t\"uniform float minResolution;\",\n\t\t\t\t\"uniform float randomSeed;\",\n\t\t\t\t\"uniform float maxDepth;\",\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\"float unpackDepth(vec3 pack) {\",\n\t\t\t\t\"\tfloat depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );\",\n\t  \t\t\t\"\treturn depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);\",\n\t\t\t\t\"}\",\n\t\t\t\t\n\t\t\t\t\"vec3 packDepth(float depth) {\",\n\t\t\t\t\"\tfloat depthVal = depth * (256.0*256.0*256.0 - 1.0) / (256.0*256.0*256.0);\",\n\t   \t\t\t\"\tvec4 encode = fract( depthVal * vec4(1.0, 256.0, 256.0*256.0, 256.0*256.0*256.0) );\",\n\t    \t\t\"\treturn encode.xyz - encode.yzw / 256.0 + 1.0/512.0;\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\n\t\t\t\t\"float getViewZ( const in float depth ) {\",\n\n\t\t\t\t\t\"return perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {\",\n\n\t\t\t\t\t\"float clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];\",\n\t\t\t\t\t\"vec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\",\n\t\t\t\t\t\"clipPosition *= clipW;\", // unprojection.\n\t\t\t\t\t\"return ( cameraInverseProjectionMatrix * clipPosition ).xyz;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {\",\n\n\t\t\t\t\t\"return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );\",\n\t\t\t\t\n\t\t\t\t\"}\",\n\n\t\t\t\t\"float scaleDividedByCameraFar;\",\n\t\t\t\t\"float minResolutionMultipliedByCameraFar;\",\n\n\t\t\t\t\"float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\",\n\n\t\t\t\t\t\"vec3 viewDelta = sampleViewPosition - centerViewPosition;\",\n\t\t\t\t\t\"float viewDistance = length( viewDelta );\",\n\t\t\t\t\t\"float scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\",\n\t\t\t\t\t\"return max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t// moving costly divides into consts\n\t\t\t\t\"const float ANGLE_STEP = PI2 * RINGS / SAMPLES;\",\n\t\t\t\t\"const float INV_NUM_SAMPLES = 1.0 / SAMPLES;\",\n\n\t\t\t\t\"float getAmbientOcclusion( const in vec3 centerViewPosition) {\",\n\n\t\t\t\t\t// precompute some variables require in getOcclusion.\n\t\t\t\t\t\"scaleDividedByCameraFar = scale;\",\n\t\t\t\t\t\"minResolutionMultipliedByCameraFar = minResolution * cameraFar;\",\n\t\t\t\t\t\"vec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );\",\n\n\t\t\t\t\t// jsfiddle that shows sample pattern: https://jsfiddle.net/a16ff1p7/\n\t\t\t\t\t\"float angle = rand( vUv + randomSeed ) * PI2;\",\n\t\t\t\t\t\"vec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES );\",\n\t\t\t\t\t\"vec2 radiusStep = radius;\",\n\t\t\t\t\t\"float occlusionSum = 0.;\",\n\t\t\t\t\t\"float weightSum = 0.;\",\n\t\t\t\t\t\"for( int i = 0; i < int(SAMPLES); i ++ ) {\",\n\t\t\t\t\t\t\"vec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;\",\n\t\t\t\t\t\t\"radius += radiusStep;\",\n\t\t\t\t\t\t\"angle += ANGLE_STEP;\",\n\n\t\t\t\t\t\t\"float sampleDepth = textureVR( tDepth, sampleUv ).x;\",\n\t\t\t\t\t\t\"if( sampleDepth >= ( 1.0 - EPSILON ) ) {\",\n\t\t\t\t\t\t\t\"continue;\",\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"float sampleViewZ = getViewZ( sampleDepth );\",\n\t\t\t\t\t\t\"vec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );\",\n\t\t\t\t\t\t\"occlusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\",\n\t\t\t\t\t\t\"weightSum += 1.0;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"if( weightSum == 0.0 ) discard;\",\n\t\t\t\t\t\"return occlusionSum / weightSum;\",\n\t\t\t\t\t\n\t\t\t\t\"}\",\n\n\n\t\t\t\t\"void main() {\",\n\t\t\t\t\t\"vec4 texel = texture2D( tDepth, vUv );\",\n\t\t\t\t\t\"float centerDepth = texel.x;\",\n\t\t\t\t\t\n\t\t\t\t\t\"if( centerDepth >= ( maxDepth - EPSILON ) ) {\",\n\t\t\t\t\t\t\"discard;\",\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"float centerViewZ = getViewZ( centerDepth );\",\n\t\t\t\t\t\"vec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );\",\n\n\t\t\t\t\t\"gl_FragColor =  vec4(packDepth(texel.x), getAmbientOcclusion( viewPosition));\",\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" )\n\n\t\t};\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t *\n\t * For a horizontal blur, use X_STEP 1, Y_STEP 0\n\t * For a vertical blur, use X_STEP 0, Y_STEP 1\n\t *\n\t *\n\t */\n\n\t// Adapted by wizgrav to pack depth and AO in a single rgba texture\n\n\tTHREE.BlurShaderUtils = {\n\n\t\tcreateSampleWeights: function( kernelRadius, stdDev ) {\n\n\t\t\tvar gaussian = function( x, stdDev ) {\n\t\t\t\treturn Math.exp( - ( x*x ) / ( 2.0 * ( stdDev * stdDev ) ) ) / ( Math.sqrt( 2.0 * Math.PI ) * stdDev );\n\t\t\t};\n\n\t\t\tvar weights = [];\n\n\t\t\tfor( var i = 0; i <= kernelRadius; i ++ ) {\n\t\t\t\tweights.push( gaussian( i, stdDev ) );\n\t\t\t}\n\n\t\t\treturn weights;\n\t\t},\n\n\t\tcreateSampleOffsets: function( kernelRadius, uvIncrement ) {\n\n\t\t\tvar offsets = [];\n\n\t\t\tfor( var i = 0; i <= kernelRadius; i ++ ) {\n\t\t\t\toffsets.push( uvIncrement.clone().multiplyScalar( i ) );\n\t\t\t}\n\n\t\t\treturn offsets;\n\n\t\t},\n\n\t\tconfigure: function( kernelRadius, stdDev, uvIncrement ) {\n\t\t\treturn {\n\t\t\t\t'sampleUvOffsets': THREE.BlurShaderUtils.createSampleOffsets( kernelRadius, uvIncrement ),\n\t\t\t\t'sampleWeights': THREE.BlurShaderUtils.createSampleWeights( kernelRadius, stdDev )\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\tmodule.exports =  function (radius, stdDev, uvIncrement) {\n\t\tradius = radius || 4;\n\t\tvar config = THREE.BlurShaderUtils.configure(radius, stdDev, uvIncrement )\n\t\treturn {\n\t\t\tdefines: {\n\n\t\t\t\t\"KERNEL_RADIUS\": radius,\n\n\t\t\t},\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"tDiffuse\":         { type: \"t\", value: null },\n\t\t\t\t\"size\":             { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t\t\t\"sampleUvOffsets\":  { type: \"v2v\", value: config.sampleUvOffsets },\n\t\t\t\t\"sampleWeights\":    { type: \"1fv\", value: config.sampleWeights },\n\t\t\t\t\"depthCutoff\":      { type: \"f\", value: 10 },\n\t\t\t\t\"cameraFar\":      { type: \"f\", value: 1 },\n\t\t\t\t\"cameraNear\":      { type: \"f\", value: 1000 }\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"#include <common>\",\n\n\t\t\t\t\"uniform vec2 size;\",\n\n\t\t\t\t\"varying vec2 vUv;\",\n\t\t\t\t\"varying vec2 vInvSize;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\t\"vInvSize = 1.0 / size;\",\n\n\t\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"#include <common>\",\n\t\t\t\t\"#include <packing>\",\n\n\t\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\t\n\t\t\t\t\"uniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];\",\n\t\t\t\t\"uniform float sampleWeights[ KERNEL_RADIUS + 1 ];\",\n\t\t\t\t\"uniform float depthCutoff;\",\n\t\t\t\t\"uniform float cameraFar;\",\n\t\t\t\t\"uniform float cameraNear;\",\n\n\t\t\t\t\"varying vec2 vUv;\",\n\t\t\t\t\"varying vec2 vInvSize;\",\n\t\t\t\t\n\t\t\t\t\"float unpackDepth(vec3 pack) {\",\n\t\t\t\t\"\tfloat depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );\",\n\t  \t\t\t\"\treturn depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);\",\n\t\t\t\t\"}\",\n\t\t\t\t\n\t\t\t\t\"float getViewZ( const in float depth ) {\",\n\n\t\t\t\t \"return perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\n\n\t\t\t \t\"}\",\n\t\t\t\t\"void main() {\",\n\t\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\t\"vec3 orig = texel.xyz;\",\n\t\t\t\t\t\"float depth = unpackDepth( orig );\",\n\t\t\t\t\t\"if( depth >= ( 1.0 - EPSILON ) ) {\",\n\t\t\t\t\t\t\"discard;\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"float centerViewZ = -getViewZ( depth );\",\n\t\t\t\t\t\"bool rBreak = false, lBreak = false;\",\n\n\t\t\t\t\t\"float weightSum = sampleWeights[0];\",\n\t\t\t\t\t\"float AOSum = texel.a * weightSum;\",\n\n\t\t\t\t\t\"for( int i = 1; i <= KERNEL_RADIUS; i ++ ) {\",\n\n\t\t\t\t\t\t\"float sampleWeight = sampleWeights[i];\",\n\t\t\t\t\t\t\"vec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;\",\n\n\t\t\t\t\t\t\"vec2 sampleUv = vUv + sampleUvOffset;\",\n\t\t\t\t\t\t\"texel = textureVR( tDiffuse, sampleUv );\",\n\t\t\t\t\t\t\"float viewZ = -getViewZ(unpackDepth( texel.xyz ));\",\n\n\t\t\t\t\t\t\"if( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;\",\n\n\t\t\t\t\t\t\"if( ! rBreak ) {\",\n\t\t\t\t\t\t\t\"AOSum += texel.a * sampleWeight;\",\n\t\t\t\t\t\t\t\"weightSum += sampleWeight;\",\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"sampleUv = vUv - sampleUvOffset;\",\n\t\t\t\t\t\t\"texel = textureVR( tDiffuse, sampleUv );\",\n\t\t\t\t\t\t\"viewZ = -getViewZ(unpackDepth( texel.xyz ));\",\n\n\t\t\t\t\t\t\"if( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;\",\n\n\t\t\t\t\t\t\"if( ! lBreak ) {\",\n\t\t\t\t\t\t\t\"AOSum += texel.a * sampleWeight;\",\n\t\t\t\t\t\t\t\"weightSum += sampleWeight;\",\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"gl_FragColor = vec4(orig, AOSum / weightSum);\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" )\n\n\t};\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\tAFRAME.registerComponent(\"lighty\", {\n\t\tschema: {\n\t\t\tcolor: { type: \"color\", default: \"#000000\" },\n\t\t\tradius: { type: \"number\", default: 0 },\n\t\t\tdecay: { type: \"number\", default: 1 }\n\t\t},\n\t\t\n\t\tinit: function () {\n\t\t\tthis.el.sceneEl.systems.effects.addLight(this);\n\t\t},\n\t\t\n\t\tremove: function () {\n\t\t\tthis.el.sceneEl.systems.effects.removeLight(this);\n\t\t}\n\t});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tTHREE.ShaderChunk[ 'lights_pars_maps' ] += [\n\t\t'#if defined TILED_FORWARD',\n\t\t'uniform vec4 tileData;',\n\t\t'uniform sampler2D tileTexture;',\n\t\t'uniform sampler2D lightTexture;',\n\t\t'#endif'\n\t].join( '\\n' );\n\n\tTHREE.ShaderChunk[ 'lights_fragment_maps' ] += [\n\t\t'',\n\t\t'#if defined TILED_FORWARD',\n\t\t'vec2 tUv = floor(gl_FragCoord.xy / tileData.xy * 32.) / 32. + tileData.zw;',\n\t\t'vec4 tile = texture2D(tileTexture, tUv);',\n\t\t'for (int i=0; i < 4; i++) {',\n\t\t'\tfloat tileVal = tile.x * 255.;',\n\t\t'  \ttile.xyzw = tile.yzwx;',\n\t\t'\tif(tileVal == 0.){ continue; }',\n\t\t'  \tfloat tileDiv = 128.;',\n\t\t'\tfor (int j=0; j < 8; j++) {',\n\t\t'  \t\tif (tileVal < tileDiv) {  tileDiv *= 0.5; continue; }',\n\t\t'\t\ttileVal -= tileDiv;',\n\t\t'\t\ttileDiv *= 0.5;',\n\t\t'  \t\tPointLight pointlight;',\n\t\t'\t\tfloat uvx = (float(8 * i + j) + 0.5) / 32.;',\n\t\t'  \t\tvec4 lightData = texture2D(lightTexture, vec2(uvx, 0.));',\n\t\t'  \t\tvec4 lightColor = texture2D(lightTexture, vec2(uvx, 1.));',\n\t\t'  \t\tpointlight.position = lightData.xyz;',\n\t\t'  \t\tpointlight.distance = lightData.w;',\n\t\t'  \t\tpointlight.color = lightColor.rgb;',\n\t\t'  \t\tpointlight.decay = lightColor.a;',\n\t\t'  \t\tgetPointDirectLightIrradiance( pointlight, geometry, directLight );',\n\t\t'\t\tRE_Direct( directLight, geometry, material, reflectedLight );',\n\t\t'\t}',\n\t\t'}',\n\t\t'#endif'\n\t].join( '\\n' );\n\n\tvar utils = AFRAME.utils;\n\n\tvar CubeLoader = new THREE.CubeTextureLoader();\n\tvar texturePromises = {};\n\n\t/**\n\t * Standard (physically-based) shader with tiled forward lighting.\n\t */\n\tAFRAME.registerShader('standard-fx', {\n\t  schema: {\n\t    ambientOcclusionMap: {type: 'map'},\n\t    ambientOcclusionMapIntensity: {default: 1},\n\t    ambientOcclusionTextureOffset: {type: 'vec2'},\n\t    ambientOcclusionTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n\t    color: {type: 'color'},\n\n\t    displacementMap: {type: 'map'},\n\t    displacementScale: {default: 1},\n\t    displacementBias: {default: 0.5},\n\t    displacementTextureOffset: {type: 'vec2'},\n\t    displacementTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\t    emissive: {type: 'color', default: '#000'},\n\t    emissiveIntensity: {default: 1},\n\t    envMap: {default: ''},\n\n\t    fog: {default: true},\n\t    height: {default: 256},\n\n\t    metalness: {default: 0.0, min: 0.0, max: 1.0},\n\t    metalnessMap: {type: 'map'},\n\t    metalnessTextureOffset: {type: 'vec2'},\n\t    metalnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n\t    normalMap: {type: 'map'},\n\t    normalScale: {type: 'vec2', default: {x: 1, y: 1}},\n\t    normalTextureOffset: {type: 'vec2'},\n\t    normalTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n\t    offset: {type: 'vec2', default: {x: 0, y: 0}},\n\t    repeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n\t    roughness: {default: 0.5, min: 0.0, max: 1.0},\n\t    roughnessMap: {type: 'map'},\n\t    roughnessTextureOffset: {type: 'vec2'},\n\t    roughnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}},\n\n\t    sphericalEnvMap: {type: 'map'},\n\t    src: {type: 'map'},\n\t    width: {default: 512},\n\t    wireframe: {default: false},\n\t    wireframeLinewidth: {default: 2}\n\t  },\n\n\t  /**\n\t   * Initializes the shader.\n\t   * Adds a reference from the scene to this entity as the camera.\n\t   */\n\t  init: function (data) {\n\t    this.material = new THREE.MeshStandardMaterial(getMaterialData(data));\n\t    utils.material.updateMap(this, data);\n\t    if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); }\n\t    if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); }\n\t    if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); }\n\t    if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); }\n\t    if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); }\n\t    this.updateEnvMap(data);\n\t\tthis.material.onBeforeCompile = function ( shader ) {\n\t\t\tshader.uniforms.tileData = State.tileData;\n\t\t\tshader.uniforms.tileTexture = State.tileTexture;\n\t\t\tshader.uniforms.lightTexture = State.lightTexture;\n\t\t\tshader.defines[ 'TILED_FORWARD' ] = 1;  \n\t\t}\n\t  },\n\n\t  update: function (data) {\n\t    this.updateMaterial(data);\n\t    utils.material.updateMap(this, data);\n\t    if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); }\n\t    if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); }\n\t    if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); }\n\t    if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); }\n\t    if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); }\n\t    this.updateEnvMap(data);\n\t  },\n\n\t  /**\n\t   * Updating existing material.\n\t   *\n\t   * @param {object} data - Material component data.\n\t   * @returns {object} Material.\n\t   */\n\t  updateMaterial: function (data) {\n\t    var material = this.material;\n\t    data = getMaterialData(data);\n\t    Object.keys(data).forEach(function (key) {\n\t      material[key] = data[key];\n\t    });\n\t  },\n\n\t  /**\n\t   * Handle environment cubemap. Textures are cached in texturePromises.\n\t   */\n\t  updateEnvMap: function (data) {\n\t    var self = this;\n\t    var material = this.material;\n\t    var envMap = data.envMap;\n\t    var sphericalEnvMap = data.sphericalEnvMap;\n\n\t    // No envMap defined or already loading.\n\t    if ((!envMap && !sphericalEnvMap) || this.isLoadingEnvMap) {\n\t      material.envMap = null;\n\t      material.needsUpdate = true;\n\t      return;\n\t    }\n\t    this.isLoadingEnvMap = true;\n\n\t    // if a spherical env map is defined then use it.\n\t    if (sphericalEnvMap) {\n\t      this.el.sceneEl.systems.material.loadTexture(sphericalEnvMap, {src: sphericalEnvMap}, function textureLoaded (texture) {\n\t        self.isLoadingEnvMap = false;\n\t        texture.mapping = THREE.SphericalReflectionMapping;\n\t        material.envMap = texture;\n\t        utils.material.handleTextureEvents(self.el, texture);\n\t        material.needsUpdate = true;\n\t      });\n\t      return;\n\t    }\n\n\t    // Another material is already loading this texture. Wait on promise.\n\t    if (texturePromises[envMap]) {\n\t      texturePromises[envMap].then(function (cube) {\n\t        self.isLoadingEnvMap = false;\n\t        material.envMap = cube;\n\t        utils.material.handleTextureEvents(self.el, cube);\n\t        material.needsUpdate = true;\n\t      });\n\t      return;\n\t    }\n\n\t    // Material is first to load this texture. Load and resolve texture.\n\t    texturePromises[envMap] = new Promise(function (resolve) {\n\t      utils.srcLoader.validateCubemapSrc(envMap, function loadEnvMap (urls) {\n\t        CubeLoader.load(urls, function (cube) {\n\t          // Texture loaded.\n\t          self.isLoadingEnvMap = false;\n\t          material.envMap = cube;\n\t          utils.material.handleTextureEvents(self.el, cube);\n\t          resolve(cube);\n\t        });\n\t      });\n\t    });\n\t  }\n\t});\n\n\t/**\n\t * Builds and normalize material data, normalizing stuff along the way.\n\t *\n\t * @param {object} data - Material data.\n\t * @returns {object} data - Processed material data.\n\t */\n\tfunction getMaterialData (data) {\n\t  var newData = {\n\t    color: new THREE.Color(data.color),\n\t    emissive: new THREE.Color(data.emissive),\n\t    emissiveIntensity: data.emissiveIntensity,\n\t    fog: data.fog,\n\t    metalness: data.metalness,\n\t    roughness: data.roughness,\n\t    wireframe: data.wireframe,\n\t    wireframeLinewidth: data.wireframeLinewidth\n\t  };\n\n\t  if (data.normalMap) { newData.normalScale = data.normalScale; }\n\n\t  if (data.ambientOcclusionMap) { newData.aoMapIntensity = data.ambientOcclusionMapIntensity; }\n\n\t  if (data.displacementMap) {\n\t    newData.displacementScale = data.displacementScale;\n\t    newData.displacementBias = data.displacementBias;\n\t  }\n\n\t  return newData;\n\t}\n\n/***/ })\n/******/ ]);","let CS1 = window.CS1 = {};\nimport utils from './utils';\nutils(CS1);\nimport loadSpinner from './load-spinner';\nimport './load-spinner.css';\nimport grabbable from './grabbable';\nimport navpointer from './nav-pointer';\nimport shaderfrog from './shader-frog';\nimport hud from './hud';\nimport './hud.css';\nhud(CS1);\nimport game from './game';\ngame(CS1);\nimport socket from './client-socket';\nsocket(CS1);\nimport collectible from './collectible';\ncollectible(CS1);\nimport './main.css';\nimport login from './login';\nimport './login.css';\nimport aframeEffects from './aframe-effects';\n\n  \n\n  "],"names":["CS1","utils","uid","firstItem","value","counter","split","reduce","acc","curValue","curIndex","arr","curObj","prev","now","Date","performance","toString","replace","Math","random","substr","window","addEventListener","console","log","loadSpinner","document","createElement","className","i","appendChild","style","left","innerWidth","loadingScreen","querySelector","width","height","innerHeight","copyTransform","scratchMat","THREE","Matrix4","source","destination","matrix","copy","matrixWorld","applyMatrix","getInverse","parent","AFRAME","registerComponent","schema","origin","type","init","grab","e","cancelBubble","isDragging","cursor","detail","cursorEl","self","el","sceneEl","setAttribute","setTimeout","createProxyObject","object3D","originEl","emit","addState","release","proxyObject","remove","getAttribute","removeState","cursorObject","Object3D","visible","add","this","data","classList","device","isMobile","tick","ctrlEl","active","intersection","point","color","components","raycaster","refreshObjects","shaders","Polkadot_Shader","Sun_Shader","Jelly_Shader","Green_Dance_Shader","Cosmic_Shader","Cool_Tiles_Shader","Disco_Shader","Marching_Ants_Shader","Goo_Shader","Psycho_Shader","ShaderRuntime","extend","length","arguments","obj","index","keys","Object","l","key","clone","omit","x","cloned","prototype","mainCamera","cubeCameras","reserved","time","cameraPosition","umap","float","int","vec2","[object Object]","Vector2","vec3","Vector3","vec4","Vector4","samplerCube","sampler2D","camera","Camera","Error","name","renderTarget","identifier","config","findBy","shaderTypes","shader","newShaderData","runningShaders","material","needsUpdate","oldName","newName","shaderType","initted","create","shaderName","uniform","newData","fragmentShader","fragment","vertexShader","vertex","uniformName","uniforms","getUmap","glslType","id","RawShaderMaterial","push","position","viewMatrix","matrixWorldInverse","registerSystem","registerCamera","systems","frog_runtime","clock","Clock","scene","hasLoaded","bind","t","updateShaders","getElapsedTime","originalMaterial","getObject3D","shaderData","update","system","get","RingDial","container","labelText","suffix","labelColor","gradientColor1","gradientColor2","size","strokeWidth","radius","direction","svg","defs","slice","overlay","text","label","arrow","createSvg","createDefs","createSlice","createOverlay","createText","createLabel","createElementNS","gc1","gc2","linearGradient","stop1","stop2","linearGradientBackground","r","circle","c","fontSize","tspanSize","innerHTML","n","createArrow","arrowYOffset","m","arrowSize","arrowPosX","arrowPosY","arrowDOffset","animateStart","v","intervalOne","setInterval","p","toFixed","clearInterval","setValue","animateTo","to","a","animateReset","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","join","xy","d","floor","Meter","min","max","low","high","optimum","widget","marginTop","marginBottom","parseFloat","range","textAlign","generateRegions","hudElement","containers","top","hud","pointsDial","statusDial","magicDial","oxygenMeter","gameName","emoji","favicon","theme","fontFamily","titleFontColor","formFontColor","formColor","overlayColor","avatar","models","url","scale","yOffset","animations","idle","msg","offset","thruster","innerColor","outerColor","buttonFaces","buttonColor","speed","sounds","playerJoined","playerLeft","yay","loop","volume","splashIn","splashOut","hyperspace","environment","preset","seed","shadow","playArea","shadowSize","dressing","dressingAmount","dressingColor","dressingScale","dressingVariance","dressingUniformScale","fog","flatShading","skyType","horizonColor","skyColor","ground","groundYScale","groundTexture","groundColor","groundColor2","grid","gridColor","lighting","lightPosition","bgm","songs","playAll","initialDelay","releasePointerLockOnUI","toggleUI","nextSong","toggleMute","toggleCursor","showCursor","voice","rate","pitch","welcomeDelay","physics","gravity","maxGrabDistance","objects","geometry","collectibles","itemDefs","rotation","threshold","positions","collectSound","collectParticles","callback","params","amount","animation","readouts","rotations","textAttributes","align","font","mobile","thruster_icon","joystick_outer_color","joystick_inner_color","vr","mode","default","game","hasBegun","display","player","dt","socket","io","on","playerData","faceIndex","lastPlayerData","login","un","pw","success","zIndex","getElementById","pos","Number","z","rot","soundIsPlaying","_callbacks","collectedEntity","sound","playSound","pause","collector","distanceTo","collect","disconnected","indexOf","onload","loginContainer","connected","preventDefault","modules","__webpack_require__","moduleId","installedModules","exports","module","loaded","call","Component","attrName","System","registerShader","definition","NewComponent","proto","forEach","writable","attr","constructor","NewSystem","fx","renderer","cameras","Array","isArray","isPlaying","effects","chain","sys","oldData","set","pro","undefined","nd","o","render","behaviors","timeDelta","b","behavior","tock","Effects","passes","_passes","setupPostState","needsOverride","lightComponents","LightState","rows","cols","tileData","tileTexture","lightTexture","DataTexture","Float32Array","RGBAFormat","FloatType","addLight","removeLight","splice","WebGLRenderTarget","minFilter","LinearFilter","magFilter","format","texture","generateMipmaps","depthBuffer","depthTexture","DepthTexture","UnsignedShortType","stencilBuffer","Scene","OrthographicCamera","quad","Mesh","PlaneBufferGeometry","frustumCulled","sceneLeft","quadLeft","attributes","uv","array","sceneRight","quadRight","targets","tDiffuse","tDepth","cameraFar","cameraNear","uvClamp","uvBoth","resolution","uvLeft","uvRight","parseToken","renderPass","viewCb","forceClear","setView","w","h","viewport","scissor","setViewport","setScissor","isFn","s","getSize","oldClear","autoClear","round","materialize","fs","ShaderMaterial","depthWrite","depthTest","blending","NoBlending","extensions","derivatives","defines","fuse","temp","alpha","k","count","chunks","head","main","includes","needsDepth","needsDiffuse","callMain","swapMain","args","tok","exec","prop","Document","body","textContent","depth","dataset","diffuse","trim","defaults","prefix","u","inc","t2u","f","v2","v3","v4","m2","m3","m4","premain","debug","rebuild","pickup","pass","makepass","dispose","writeBuffer","readBuffer","isActive","resize","bypass","needsResize","setSize","register","unregister","rt","effect","rts","onBeforeRender","resizeTiles","ArrayCamera","tileLights","rendererRender","setupPasses","far","near","ceil","Uint8Array","projectionMatrix","lights","image","ld","fill","vector","light","setFromMatrixPosition","pm","bs","lightBounds","applyMatrix4","toArray","decay","i4","i8","j","minX","maxX","minY","maxY","hw","hh","project","multiple","enabled","strength","ratio","smooth","pars","blurTarget","tockUniforms","Color","blurDirection","sobel","blur","currentMaterial","blurMaterial","nIntensity","sIntensity","sCount","us","FXAAShader","BlurDirectionX","BlurDirectionY","enable","filter","renderTargetsHorizontal","renderTargetsVertical","nMips","renderTargetBright","luminosityThreshold","smoothWidth","defaultColor","defaultOpacity","materialHighPassFilter","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomFactors","bloomTintColors","oldClearColor","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","setClearColor","inputRenderTarget","resx","resy","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","NUM_MIPS","blurTexture1","blurTexture2","blurTexture3","blurTexture4","blurTexture5","bloomStrength","bloomRadius","shaderID","lut","lutClamp","lutFlip","mul","pow","right","quant","orig","red","green","blue","Texture","NearestFilter","op","ops","preFragment","q","g","tDisp","generateHeightmap","angle","seed_x","seed_y","distortion_x","distortion_y","col_s","glitch","curF","generateTrigger","randX","randFloat","randInt","dt_size","data_arr","val","RGBFormat","tint","src","intensity","rtFilter","rtTextureGodRays1","rtTextureGodRays2","step","materialGodraysGenerate","attenuation","materialFilter","fn","eye","cp3","cd3","getWorldPosition","getWorldDirection","sub","normalize","dot","stepLen","SAOShader","DepthLimitedBlurShader","samples","rings","maxDepth","bias","blurRadius","depthCutoff","renderTargets","SAOMaterial","hBlurMaterial","vBlurMaterial","sizeUniform","od","sao","parseInt","isFirst","cameraProjectionMatrix","cameraInverseProjectionMatrix","minResolution","randomSeed","BlurShaderUtils","createSampleWeights","stdDev","weights","exp","sqrt","createSampleOffsets","uvIncrement","offsets","multiplyScalar","configure","sampleUvOffsets","sampleWeights","getMaterialData","emissive","emissiveIntensity","metalness","roughness","wireframe","wireframeLinewidth","normalMap","normalScale","ambientOcclusionMap","aoMapIntensity","ambientOcclusionMapIntensity","displacementMap","displacementScale","displacementBias","ShaderChunk","CubeLoader","CubeTextureLoader","texturePromises","ambientOcclusionTextureOffset","ambientOcclusionTextureRepeat","displacementTextureOffset","displacementTextureRepeat","envMap","metalnessMap","metalnessTextureOffset","metalnessTextureRepeat","normalTextureOffset","normalTextureRepeat","repeat","roughnessMap","roughnessTextureOffset","roughnessTextureRepeat","sphericalEnvMap","MeshStandardMaterial","updateMap","updateDistortionMap","updateEnvMap","onBeforeCompile","State","updateMaterial","isLoadingEnvMap","loadTexture","mapping","SphericalReflectionMapping","handleTextureEvents","then","cube","Promise","resolve","srcLoader","validateCubemapSrc","urls","load","collectible"],"mappings":"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"}